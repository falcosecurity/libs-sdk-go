/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.8
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

// source: sysdig.i

#define SWIGMODULE sysdigswiglib

#ifdef __cplusplus
/* SwigValueWrapper is described in swig.swg */
template<typename T> class SwigValueWrapper {
  struct SwigMovePointer {
    T *ptr;
    SwigMovePointer(T *p) : ptr(p) { }
    ~SwigMovePointer() { delete ptr; }
    SwigMovePointer& operator=(SwigMovePointer& rhs) { T* oldptr = ptr; ptr = 0; delete oldptr; ptr = rhs.ptr; rhs.ptr = 0; return *this; }
  } pointer;
  SwigValueWrapper& operator=(const SwigValueWrapper<T>& rhs);
  SwigValueWrapper(const SwigValueWrapper<T>& rhs);
public:
  SwigValueWrapper() : pointer(0) { }
  SwigValueWrapper& operator=(const T& t) { SwigMovePointer tmp(new T(t)); pointer = tmp; return *this; }
  operator T&() const { return *pointer.ptr; }
  T *operator&() { return pointer.ptr; }
};

template <typename T> T SwigValueInit() {
  return T();
}
#endif

/* -----------------------------------------------------------------------------
 *  This section contains generic SWIG labels for method/variable
 *  declarations/attributes, and other compiler dependent labels.
 * ----------------------------------------------------------------------------- */

/* template workaround for compilers that cannot correctly implement the C++ standard */
#ifndef SWIGTEMPLATEDISAMBIGUATOR
# if defined(__SUNPRO_CC) && (__SUNPRO_CC <= 0x560)
#  define SWIGTEMPLATEDISAMBIGUATOR template
# elif defined(__HP_aCC)
/* Needed even with `aCC -AA' when `aCC -V' reports HP ANSI C++ B3910B A.03.55 */
/* If we find a maximum version that requires this, the test would be __HP_aCC <= 35500 for A.03.55 */
#  define SWIGTEMPLATEDISAMBIGUATOR template
# else
#  define SWIGTEMPLATEDISAMBIGUATOR
# endif
#endif

/* inline attribute */
#ifndef SWIGINLINE
# if defined(__cplusplus) || (defined(__GNUC__) && !defined(__STRICT_ANSI__))
#   define SWIGINLINE inline
# else
#   define SWIGINLINE
# endif
#endif

/* attribute recognised by some compilers to avoid 'unused' warnings */
#ifndef SWIGUNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define SWIGUNUSED __attribute__ ((__unused__))
#   else
#     define SWIGUNUSED
#   endif
# elif defined(__ICC)
#   define SWIGUNUSED __attribute__ ((__unused__))
# else
#   define SWIGUNUSED
# endif
#endif

#ifndef SWIG_MSC_UNSUPPRESS_4505
# if defined(_MSC_VER)
#   pragma warning(disable : 4505) /* unreferenced local function has been removed */
# endif
#endif

#ifndef SWIGUNUSEDPARM
# ifdef __cplusplus
#   define SWIGUNUSEDPARM(p)
# else
#   define SWIGUNUSEDPARM(p) p SWIGUNUSED
# endif
#endif

/* internal SWIG method */
#ifndef SWIGINTERN
# define SWIGINTERN static SWIGUNUSED
#endif

/* internal inline SWIG method */
#ifndef SWIGINTERNINLINE
# define SWIGINTERNINLINE SWIGINTERN SWIGINLINE
#endif

/* exporting methods */
#if (__GNUC__ >= 4) || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4)
#  ifndef GCC_HASCLASSVISIBILITY
#    define GCC_HASCLASSVISIBILITY
#  endif
#endif

#ifndef SWIGEXPORT
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   if defined(STATIC_LINKED)
#     define SWIGEXPORT
#   else
#     define SWIGEXPORT __declspec(dllexport)
#   endif
# else
#   if defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
#     define SWIGEXPORT __attribute__ ((visibility("default")))
#   else
#     define SWIGEXPORT
#   endif
# endif
#endif

/* calling conventions for Windows */
#ifndef SWIGSTDCALL
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   define SWIGSTDCALL __stdcall
# else
#   define SWIGSTDCALL
# endif
#endif

/* Deal with Microsoft's attempt at deprecating C standard runtime functions */
#if !defined(SWIG_NO_CRT_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_CRT_SECURE_NO_DEPRECATE)
# define _CRT_SECURE_NO_DEPRECATE
#endif

/* Deal with Microsoft's attempt at deprecating methods in the standard C++ library */
#if !defined(SWIG_NO_SCL_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_SCL_SECURE_NO_DEPRECATE)
# define _SCL_SECURE_NO_DEPRECATE
#endif

/* Deal with Apple's deprecated 'AssertMacros.h' from Carbon-framework */
#if defined(__APPLE__) && !defined(__ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES)
# define __ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES 0
#endif

/* Intel's compiler complains if a variable which was never initialised is
 * cast to void, which is a common idiom which we use to indicate that we
 * are aware a variable isn't used.  So we just silence that warning.
 * See: https://github.com/swig/swig/issues/192 for more discussion.
 */
#ifdef __INTEL_COMPILER
# pragma warning disable 592
#endif


#include <stddef.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <sys/types.h>



typedef int intgo;
typedef unsigned int uintgo;



typedef struct { char *p; intgo n; } _gostring_;
typedef struct { void* array; intgo len; intgo cap; } _goslice_;




#define swiggo_size_assert_eq(x, y, name) typedef char name[(x-y)*(x-y)*-2+1];
#define swiggo_size_assert(t, n) swiggo_size_assert_eq(sizeof(t), n, swiggo_sizeof_##t##_is_not_##n)

swiggo_size_assert(char, 1)
swiggo_size_assert(short, 2)
swiggo_size_assert(int, 4)
typedef long long swiggo_long_long;
swiggo_size_assert(swiggo_long_long, 8)
swiggo_size_assert(float, 4)
swiggo_size_assert(double, 8)

#ifdef __cplusplus
extern "C" {
#endif
extern void crosscall2(void (*fn)(void *, int), void *, int);
extern char* _cgo_topofstack(void) __attribute__ ((weak));
extern void _cgo_allocate(void *, int);
extern void _cgo_panic(void *, int);
#ifdef __cplusplus
}
#endif

static char *_swig_topofstack() {
  if (_cgo_topofstack) {
    return _cgo_topofstack();
  } else {
    return 0;
  }
}

static void _swig_gopanic(const char *p) {
  struct {
    const char *p;
  } a;
  a.p = p;
  crosscall2(_cgo_panic, &a, (int) sizeof a);
}




#define SWIG_contract_assert(expr, msg) \
  if (!(expr)) { _swig_gopanic(msg); } else


static _gostring_ Swig_AllocateString(const char *p, size_t l) {
  _gostring_ ret;
  ret.p = (char*)malloc(l);
  memcpy(ret.p, p, l);
  ret.n = l;
  return ret;
}


static void Swig_free(void* p) {
  free(p);
}


#define __STDC_FORMAT_MACROS
#define OUT
#include "sinsp.h"


#include <string>


#include <vector>
#include <stdexcept>

#ifdef __cplusplus
extern "C" {
#endif

void _wrap_Swig_free_sysdigswiglib_f325d3b2c40a36ce(void *_swig_go_0) {
  void *arg1 = (void *) 0 ;
  
  arg1 = *(void **)&_swig_go_0; 
  
  Swig_free(arg1);
  
}


intgo _wrap_CT_OPEN_sysdigswiglib_f325d3b2c40a36ce() {
  sinsp_pd_callback_type result;
  intgo _swig_go_result;
  
  
  result = CT_OPEN;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_CT_CONNECT_sysdigswiglib_f325d3b2c40a36ce() {
  sinsp_pd_callback_type result;
  intgo _swig_go_result;
  
  
  result = CT_CONNECT;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_CT_READ_sysdigswiglib_f325d3b2c40a36ce() {
  sinsp_pd_callback_type result;
  intgo _swig_go_result;
  
  
  result = CT_READ;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_CT_WRITE_sysdigswiglib_f325d3b2c40a36ce() {
  sinsp_pd_callback_type result;
  intgo _swig_go_result;
  
  
  result = CT_WRITE;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_CT_TUPLE_CHANGE_sysdigswiglib_f325d3b2c40a36ce() {
  sinsp_pd_callback_type result;
  intgo _swig_go_result;
  
  
  result = CT_TUPLE_CHANGE;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


std::vector< std::string > *_wrap_sinsp_split_sysdigswiglib_f325d3b2c40a36ce(_gostring_ _swig_go_0, char _swig_go_1) {
  std::string *arg1 = 0 ;
  char arg2 ;
  SwigValueWrapper< std::vector< std::string > > result;
  std::vector< std::string > *_swig_go_result;
  
  
  std::string arg1_str(_swig_go_0.p, _swig_go_0.n);
  arg1 = &arg1_str;
  
  arg2 = (char)_swig_go_1; 
  
  result = sinsp_split((std::string const &)*arg1,arg2);
  *(std::vector< std::string > **)&_swig_go_result = new std::vector< std::string >(result); 
  return _swig_go_result;
}


void _wrap_sinsp_chisel_details_m_name_set_sysdigswiglib_f325d3b2c40a36ce(sinsp_chisel_details *_swig_go_0, _gostring_ _swig_go_1) {
  sinsp_chisel_details *arg1 = (sinsp_chisel_details *) 0 ;
  std::string *arg2 = 0 ;
  
  arg1 = *(sinsp_chisel_details **)&_swig_go_0; 
  
  std::string arg2_str(_swig_go_1.p, _swig_go_1.n);
  arg2 = &arg2_str;
  
  
  if (arg1) (arg1)->m_name = *arg2;
  
}


_gostring_ _wrap_sinsp_chisel_details_m_name_get_sysdigswiglib_f325d3b2c40a36ce(sinsp_chisel_details *_swig_go_0) {
  sinsp_chisel_details *arg1 = (sinsp_chisel_details *) 0 ;
  std::string *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(sinsp_chisel_details **)&_swig_go_0; 
  
  result = (std::string *) & ((arg1)->m_name);
  _swig_go_result = Swig_AllocateString((*result).data(), (*result).length()); 
  return _swig_go_result;
}


void _wrap_sinsp_chisel_details_m_args_set_sysdigswiglib_f325d3b2c40a36ce(sinsp_chisel_details *_swig_go_0, std::vector< pair< std::string,std::string > > *_swig_go_1) {
  sinsp_chisel_details *arg1 = (sinsp_chisel_details *) 0 ;
  std::vector< pair< std::string,std::string > > *arg2 = (std::vector< pair< std::string,std::string > > *) 0 ;
  
  arg1 = *(sinsp_chisel_details **)&_swig_go_0; 
  arg2 = *(std::vector< pair< std::string,std::string > > **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_args = *arg2;
  
}


std::vector< pair< std::string,std::string > > *_wrap_sinsp_chisel_details_m_args_get_sysdigswiglib_f325d3b2c40a36ce(sinsp_chisel_details *_swig_go_0) {
  sinsp_chisel_details *arg1 = (sinsp_chisel_details *) 0 ;
  std::vector< pair< std::string,std::string > > *result = 0 ;
  std::vector< pair< std::string,std::string > > *_swig_go_result;
  
  arg1 = *(sinsp_chisel_details **)&_swig_go_0; 
  
  result = (std::vector< pair< std::string,std::string > > *)& ((arg1)->m_args);
  *(std::vector< pair< std::string,std::string > > **)&_swig_go_result = (std::vector< pair< std::string,std::string > > *)result; 
  return _swig_go_result;
}


sinsp_chisel_details *_wrap_new_sinsp_chisel_details_sysdigswiglib_f325d3b2c40a36ce() {
  sinsp_chisel_details *result = 0 ;
  sinsp_chisel_details *_swig_go_result;
  
  
  result = (sinsp_chisel_details *)new sinsp_chisel_details();
  *(sinsp_chisel_details **)&_swig_go_result = (sinsp_chisel_details *)result; 
  return _swig_go_result;
}


void _wrap_delete_sinsp_chisel_details_sysdigswiglib_f325d3b2c40a36ce(sinsp_chisel_details *_swig_go_0) {
  sinsp_chisel_details *arg1 = (sinsp_chisel_details *) 0 ;
  
  arg1 = *(sinsp_chisel_details **)&_swig_go_0; 
  
  delete arg1;
  
}


intgo _wrap_FL_NONE_filter_check_info_sysdigswiglib_f325d3b2c40a36ce() {
  filter_check_info::flags result;
  intgo _swig_go_result;
  
  
  result = filter_check_info::FL_NONE;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_FL_WORKS_ON_THREAD_TABLE_filter_check_info_sysdigswiglib_f325d3b2c40a36ce() {
  filter_check_info::flags result;
  intgo _swig_go_result;
  
  
  result = filter_check_info::FL_WORKS_ON_THREAD_TABLE;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


intgo _wrap_FL_HIDDEN_filter_check_info_sysdigswiglib_f325d3b2c40a36ce() {
  filter_check_info::flags result;
  intgo _swig_go_result;
  
  
  result = filter_check_info::FL_HIDDEN;
  
  _swig_go_result = (intgo)result; 
  return _swig_go_result;
}


filter_check_info *_wrap_new_filter_check_info_sysdigswiglib_f325d3b2c40a36ce() {
  filter_check_info *result = 0 ;
  filter_check_info *_swig_go_result;
  
  
  result = (filter_check_info *)new filter_check_info();
  *(filter_check_info **)&_swig_go_result = (filter_check_info *)result; 
  return _swig_go_result;
}


void _wrap_filter_check_info_m_name_set_sysdigswiglib_f325d3b2c40a36ce(filter_check_info *_swig_go_0, _gostring_ _swig_go_1) {
  filter_check_info *arg1 = (filter_check_info *) 0 ;
  std::string *arg2 = 0 ;
  
  arg1 = *(filter_check_info **)&_swig_go_0; 
  
  std::string arg2_str(_swig_go_1.p, _swig_go_1.n);
  arg2 = &arg2_str;
  
  
  if (arg1) (arg1)->m_name = *arg2;
  
}


_gostring_ _wrap_filter_check_info_m_name_get_sysdigswiglib_f325d3b2c40a36ce(filter_check_info *_swig_go_0) {
  filter_check_info *arg1 = (filter_check_info *) 0 ;
  std::string *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(filter_check_info **)&_swig_go_0; 
  
  result = (std::string *) & ((arg1)->m_name);
  _swig_go_result = Swig_AllocateString((*result).data(), (*result).length()); 
  return _swig_go_result;
}


void _wrap_filter_check_info_m_nfields_set_sysdigswiglib_f325d3b2c40a36ce(filter_check_info *_swig_go_0, int32_t *_swig_go_1) {
  filter_check_info *arg1 = (filter_check_info *) 0 ;
  int32_t arg2 ;
  int32_t *argp2 ;
  
  arg1 = *(filter_check_info **)&_swig_go_0; 
  
  argp2 = (int32_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null int32_t");
  }
  arg2 = (int32_t)*argp2;
  
  
  if (arg1) (arg1)->m_nfields = arg2;
  
}


int32_t *_wrap_filter_check_info_m_nfields_get_sysdigswiglib_f325d3b2c40a36ce(filter_check_info *_swig_go_0) {
  filter_check_info *arg1 = (filter_check_info *) 0 ;
  int32_t result;
  int32_t *_swig_go_result;
  
  arg1 = *(filter_check_info **)&_swig_go_0; 
  
  result =  ((arg1)->m_nfields);
  *(int32_t **)&_swig_go_result = new int32_t(result); 
  return _swig_go_result;
}


void _wrap_filter_check_info_m_fields_set_sysdigswiglib_f325d3b2c40a36ce(filter_check_info *_swig_go_0, filtercheck_field_info *_swig_go_1) {
  filter_check_info *arg1 = (filter_check_info *) 0 ;
  filtercheck_field_info *arg2 = (filtercheck_field_info *) 0 ;
  
  arg1 = *(filter_check_info **)&_swig_go_0; 
  arg2 = *(filtercheck_field_info **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_fields = (filtercheck_field_info const *)arg2;
  
}


filtercheck_field_info *_wrap_filter_check_info_m_fields_get_sysdigswiglib_f325d3b2c40a36ce(filter_check_info *_swig_go_0) {
  filter_check_info *arg1 = (filter_check_info *) 0 ;
  filtercheck_field_info *result = 0 ;
  filtercheck_field_info *_swig_go_result;
  
  arg1 = *(filter_check_info **)&_swig_go_0; 
  
  result = (filtercheck_field_info *) ((arg1)->m_fields);
  *(filtercheck_field_info **)&_swig_go_result = (filtercheck_field_info *)result; 
  return _swig_go_result;
}


void _wrap_filter_check_info_m_flags_set_sysdigswiglib_f325d3b2c40a36ce(filter_check_info *_swig_go_0, uint32_t *_swig_go_1) {
  filter_check_info *arg1 = (filter_check_info *) 0 ;
  uint32_t arg2 ;
  uint32_t *argp2 ;
  
  arg1 = *(filter_check_info **)&_swig_go_0; 
  
  argp2 = (uint32_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null uint32_t");
  }
  arg2 = (uint32_t)*argp2;
  
  
  if (arg1) (arg1)->m_flags = arg2;
  
}


uint32_t *_wrap_filter_check_info_m_flags_get_sysdigswiglib_f325d3b2c40a36ce(filter_check_info *_swig_go_0) {
  filter_check_info *arg1 = (filter_check_info *) 0 ;
  uint32_t result;
  uint32_t *_swig_go_result;
  
  arg1 = *(filter_check_info **)&_swig_go_0; 
  
  result =  ((arg1)->m_flags);
  *(uint32_t **)&_swig_go_result = new uint32_t(result); 
  return _swig_go_result;
}


void _wrap_delete_filter_check_info_sysdigswiglib_f325d3b2c40a36ce(filter_check_info *_swig_go_0) {
  filter_check_info *arg1 = (filter_check_info *) 0 ;
  
  arg1 = *(filter_check_info **)&_swig_go_0; 
  
  delete arg1;
  
}


sinsp_exception *_wrap_new_sinsp_exception__SWIG_0_sysdigswiglib_f325d3b2c40a36ce() {
  sinsp_exception *result = 0 ;
  sinsp_exception *_swig_go_result;
  
  
  result = (sinsp_exception *)new sinsp_exception();
  *(sinsp_exception **)&_swig_go_result = (sinsp_exception *)result; 
  return _swig_go_result;
}


void _wrap_delete_sinsp_exception_sysdigswiglib_f325d3b2c40a36ce(sinsp_exception *_swig_go_0) {
  sinsp_exception *arg1 = (sinsp_exception *) 0 ;
  
  arg1 = *(sinsp_exception **)&_swig_go_0; 
  
  delete arg1;
  
}


sinsp_exception *_wrap_new_sinsp_exception__SWIG_1_sysdigswiglib_f325d3b2c40a36ce(_gostring_ _swig_go_0) {
  std::string arg1 ;
  sinsp_exception *result = 0 ;
  sinsp_exception *_swig_go_result;
  
  (&arg1)->assign(_swig_go_0.p, _swig_go_0.n); 
  
  result = (sinsp_exception *)new sinsp_exception(arg1);
  *(sinsp_exception **)&_swig_go_result = (sinsp_exception *)result; 
  return _swig_go_result;
}


sinsp_exception *_wrap_new_sinsp_exception__SWIG_2_sysdigswiglib_f325d3b2c40a36ce(_gostring_ _swig_go_0, int32_t *_swig_go_1) {
  std::string arg1 ;
  int32_t arg2 ;
  int32_t *argp2 ;
  sinsp_exception *result = 0 ;
  sinsp_exception *_swig_go_result;
  
  (&arg1)->assign(_swig_go_0.p, _swig_go_0.n); 
  
  argp2 = (int32_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null int32_t");
  }
  arg2 = (int32_t)*argp2;
  
  
  result = (sinsp_exception *)new sinsp_exception(arg1,arg2);
  *(sinsp_exception **)&_swig_go_result = (sinsp_exception *)result; 
  return _swig_go_result;
}


_gostring_ _wrap_sinsp_exception_what_sysdigswiglib_f325d3b2c40a36ce(sinsp_exception *_swig_go_0) {
  sinsp_exception *arg1 = (sinsp_exception *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(sinsp_exception **)&_swig_go_0; 
  
  result = (char *)((sinsp_exception const *)arg1)->what();
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


int32_t *_wrap_sinsp_exception_scap_rc_sysdigswiglib_f325d3b2c40a36ce(sinsp_exception *_swig_go_0) {
  sinsp_exception *arg1 = (sinsp_exception *) 0 ;
  int32_t result;
  int32_t *_swig_go_result;
  
  arg1 = *(sinsp_exception **)&_swig_go_0; 
  
  result = (arg1)->scap_rc();
  *(int32_t **)&_swig_go_result = new int32_t(result); 
  return _swig_go_result;
}


void _wrap_sinsp_exception_m_error_str_set_sysdigswiglib_f325d3b2c40a36ce(sinsp_exception *_swig_go_0, _gostring_ _swig_go_1) {
  sinsp_exception *arg1 = (sinsp_exception *) 0 ;
  std::string *arg2 = 0 ;
  
  arg1 = *(sinsp_exception **)&_swig_go_0; 
  
  std::string arg2_str(_swig_go_1.p, _swig_go_1.n);
  arg2 = &arg2_str;
  
  
  if (arg1) (arg1)->m_error_str = *arg2;
  
}


_gostring_ _wrap_sinsp_exception_m_error_str_get_sysdigswiglib_f325d3b2c40a36ce(sinsp_exception *_swig_go_0) {
  sinsp_exception *arg1 = (sinsp_exception *) 0 ;
  std::string *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(sinsp_exception **)&_swig_go_0; 
  
  result = (std::string *) & ((arg1)->m_error_str);
  _swig_go_result = Swig_AllocateString((*result).data(), (*result).length()); 
  return _swig_go_result;
}


void _wrap_sinsp_exception_m_scap_rc_set_sysdigswiglib_f325d3b2c40a36ce(sinsp_exception *_swig_go_0, int32_t *_swig_go_1) {
  sinsp_exception *arg1 = (sinsp_exception *) 0 ;
  int32_t arg2 ;
  int32_t *argp2 ;
  
  arg1 = *(sinsp_exception **)&_swig_go_0; 
  
  argp2 = (int32_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null int32_t");
  }
  arg2 = (int32_t)*argp2;
  
  
  if (arg1) (arg1)->m_scap_rc = arg2;
  
}


int32_t *_wrap_sinsp_exception_m_scap_rc_get_sysdigswiglib_f325d3b2c40a36ce(sinsp_exception *_swig_go_0) {
  sinsp_exception *arg1 = (sinsp_exception *) 0 ;
  int32_t result;
  int32_t *_swig_go_result;
  
  arg1 = *(sinsp_exception **)&_swig_go_0; 
  
  result =  ((arg1)->m_scap_rc);
  *(int32_t **)&_swig_go_result = new int32_t(result); 
  return _swig_go_result;
}


sinsp_capture_interrupt_exception *_wrap_new_sinsp_capture_interrupt_exception_sysdigswiglib_f325d3b2c40a36ce() {
  sinsp_capture_interrupt_exception *result = 0 ;
  sinsp_capture_interrupt_exception *_swig_go_result;
  
  
  result = (sinsp_capture_interrupt_exception *)new sinsp_capture_interrupt_exception();
  *(sinsp_capture_interrupt_exception **)&_swig_go_result = (sinsp_capture_interrupt_exception *)result; 
  return _swig_go_result;
}


void _wrap_delete_sinsp_capture_interrupt_exception_sysdigswiglib_f325d3b2c40a36ce(sinsp_capture_interrupt_exception *_swig_go_0) {
  sinsp_capture_interrupt_exception *arg1 = (sinsp_capture_interrupt_exception *) 0 ;
  
  arg1 = *(sinsp_capture_interrupt_exception **)&_swig_go_0; 
  
  delete arg1;
  
}


_gostring_ _wrap_sinsp_capture_interrupt_exception_what_sysdigswiglib_f325d3b2c40a36ce(sinsp_capture_interrupt_exception *_swig_go_0) {
  sinsp_capture_interrupt_exception *arg1 = (sinsp_capture_interrupt_exception *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(sinsp_capture_interrupt_exception **)&_swig_go_0; 
  
  sinsp_exception *swig_b0 = (sinsp_exception *)arg1;
  result = (char *)((sinsp_exception const *)swig_b0)->what();
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


int32_t *_wrap_sinsp_capture_interrupt_exception_scap_rc_sysdigswiglib_f325d3b2c40a36ce(sinsp_capture_interrupt_exception *_swig_go_0) {
  sinsp_capture_interrupt_exception *arg1 = (sinsp_capture_interrupt_exception *) 0 ;
  int32_t result;
  int32_t *_swig_go_result;
  
  arg1 = *(sinsp_capture_interrupt_exception **)&_swig_go_0; 
  
  sinsp_exception *swig_b0 = (sinsp_exception *)arg1;
  result = (swig_b0)->scap_rc();
  *(int32_t **)&_swig_go_result = new int32_t(result); 
  return _swig_go_result;
}


void _wrap_Setsinsp_capture_interrupt_exception_M_error_str_sysdigswiglib_f325d3b2c40a36ce(sinsp_capture_interrupt_exception *_swig_go_0, _gostring_ _swig_go_1) {
  sinsp_capture_interrupt_exception *arg1 = (sinsp_capture_interrupt_exception *) 0 ;
  std::string *arg2 = 0 ;
  
  arg1 = *(sinsp_capture_interrupt_exception **)&_swig_go_0; 
  
  std::string arg2_str(_swig_go_1.p, _swig_go_1.n);
  arg2 = &arg2_str;
  
  
  sinsp_exception *swig_b0 = (sinsp_exception *)arg1;
  if (swig_b0) (swig_b0)->m_error_str = *arg2;
  
}


_gostring_ _wrap_Getsinsp_capture_interrupt_exception_M_error_str_sysdigswiglib_f325d3b2c40a36ce(sinsp_capture_interrupt_exception *_swig_go_0) {
  sinsp_capture_interrupt_exception *arg1 = (sinsp_capture_interrupt_exception *) 0 ;
  std::string *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(sinsp_capture_interrupt_exception **)&_swig_go_0; 
  
  sinsp_exception *swig_b0 = (sinsp_exception *)arg1;
  result = (std::string *) & ((swig_b0)->m_error_str);
  _swig_go_result = Swig_AllocateString((*result).data(), (*result).length()); 
  return _swig_go_result;
}


void _wrap_Setsinsp_capture_interrupt_exception_M_scap_rc_sysdigswiglib_f325d3b2c40a36ce(sinsp_capture_interrupt_exception *_swig_go_0, int32_t *_swig_go_1) {
  sinsp_capture_interrupt_exception *arg1 = (sinsp_capture_interrupt_exception *) 0 ;
  int32_t arg2 ;
  int32_t *argp2 ;
  
  arg1 = *(sinsp_capture_interrupt_exception **)&_swig_go_0; 
  
  argp2 = (int32_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null int32_t");
  }
  arg2 = (int32_t)*argp2;
  
  
  sinsp_exception *swig_b0 = (sinsp_exception *)arg1;
  if (swig_b0) (swig_b0)->m_scap_rc = arg2;
  
}


int32_t *_wrap_Getsinsp_capture_interrupt_exception_M_scap_rc_sysdigswiglib_f325d3b2c40a36ce(sinsp_capture_interrupt_exception *_swig_go_0) {
  sinsp_capture_interrupt_exception *arg1 = (sinsp_capture_interrupt_exception *) 0 ;
  int32_t result;
  int32_t *_swig_go_result;
  
  arg1 = *(sinsp_capture_interrupt_exception **)&_swig_go_0; 
  
  sinsp_exception *swig_b0 = (sinsp_exception *)arg1;
  result =  ((swig_b0)->m_scap_rc);
  *(int32_t **)&_swig_go_result = new int32_t(result); 
  return _swig_go_result;
}


void _wrap_sinsp_proc_metainfo_m_pievt_set_sysdigswiglib_f325d3b2c40a36ce(sinsp_proc_metainfo *_swig_go_0, sinsp_evt *_swig_go_1) {
  sinsp_proc_metainfo *arg1 = (sinsp_proc_metainfo *) 0 ;
  sinsp_evt arg2 ;
  sinsp_evt *argp2 ;
  
  arg1 = *(sinsp_proc_metainfo **)&_swig_go_0; 
  
  argp2 = (sinsp_evt *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null sinsp_evt");
  }
  arg2 = (sinsp_evt)*argp2;
  
  
  if (arg1) (arg1)->m_pievt = arg2;
  
}


sinsp_evt *_wrap_sinsp_proc_metainfo_m_pievt_get_sysdigswiglib_f325d3b2c40a36ce(sinsp_proc_metainfo *_swig_go_0) {
  sinsp_proc_metainfo *arg1 = (sinsp_proc_metainfo *) 0 ;
  sinsp_evt result;
  sinsp_evt *_swig_go_result;
  
  arg1 = *(sinsp_proc_metainfo **)&_swig_go_0; 
  
  result =  ((arg1)->m_pievt);
  *(sinsp_evt **)&_swig_go_result = new sinsp_evt(result); 
  return _swig_go_result;
}


void _wrap_sinsp_proc_metainfo_m_piscapevt_set_sysdigswiglib_f325d3b2c40a36ce(sinsp_proc_metainfo *_swig_go_0, scap_evt *_swig_go_1) {
  sinsp_proc_metainfo *arg1 = (sinsp_proc_metainfo *) 0 ;
  scap_evt *arg2 = (scap_evt *) 0 ;
  
  arg1 = *(sinsp_proc_metainfo **)&_swig_go_0; 
  arg2 = *(scap_evt **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_piscapevt = arg2;
  
}


scap_evt *_wrap_sinsp_proc_metainfo_m_piscapevt_get_sysdigswiglib_f325d3b2c40a36ce(sinsp_proc_metainfo *_swig_go_0) {
  sinsp_proc_metainfo *arg1 = (sinsp_proc_metainfo *) 0 ;
  scap_evt *result = 0 ;
  scap_evt *_swig_go_result;
  
  arg1 = *(sinsp_proc_metainfo **)&_swig_go_0; 
  
  result = (scap_evt *) ((arg1)->m_piscapevt);
  *(scap_evt **)&_swig_go_result = (scap_evt *)result; 
  return _swig_go_result;
}


void _wrap_sinsp_proc_metainfo_m_piscapevt_vals_set_sysdigswiglib_f325d3b2c40a36ce(sinsp_proc_metainfo *_swig_go_0, uint64_t *_swig_go_1) {
  sinsp_proc_metainfo *arg1 = (sinsp_proc_metainfo *) 0 ;
  uint64_t *arg2 = (uint64_t *) 0 ;
  
  arg1 = *(sinsp_proc_metainfo **)&_swig_go_0; 
  arg2 = *(uint64_t **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_piscapevt_vals = arg2;
  
}


uint64_t *_wrap_sinsp_proc_metainfo_m_piscapevt_vals_get_sysdigswiglib_f325d3b2c40a36ce(sinsp_proc_metainfo *_swig_go_0) {
  sinsp_proc_metainfo *arg1 = (sinsp_proc_metainfo *) 0 ;
  uint64_t *result = 0 ;
  uint64_t *_swig_go_result;
  
  arg1 = *(sinsp_proc_metainfo **)&_swig_go_0; 
  
  result = (uint64_t *) ((arg1)->m_piscapevt_vals);
  *(uint64_t **)&_swig_go_result = (uint64_t *)result; 
  return _swig_go_result;
}


void _wrap_sinsp_proc_metainfo_m_n_procinfo_evts_set_sysdigswiglib_f325d3b2c40a36ce(sinsp_proc_metainfo *_swig_go_0, uint64_t *_swig_go_1) {
  sinsp_proc_metainfo *arg1 = (sinsp_proc_metainfo *) 0 ;
  uint64_t arg2 ;
  uint64_t *argp2 ;
  
  arg1 = *(sinsp_proc_metainfo **)&_swig_go_0; 
  
  argp2 = (uint64_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null uint64_t");
  }
  arg2 = (uint64_t)*argp2;
  
  
  if (arg1) (arg1)->m_n_procinfo_evts = arg2;
  
}


uint64_t *_wrap_sinsp_proc_metainfo_m_n_procinfo_evts_get_sysdigswiglib_f325d3b2c40a36ce(sinsp_proc_metainfo *_swig_go_0) {
  sinsp_proc_metainfo *arg1 = (sinsp_proc_metainfo *) 0 ;
  uint64_t result;
  uint64_t *_swig_go_result;
  
  arg1 = *(sinsp_proc_metainfo **)&_swig_go_0; 
  
  result =  ((arg1)->m_n_procinfo_evts);
  *(uint64_t **)&_swig_go_result = new uint64_t(result); 
  return _swig_go_result;
}


void _wrap_sinsp_proc_metainfo_m_cur_procinfo_evt_set_sysdigswiglib_f325d3b2c40a36ce(sinsp_proc_metainfo *_swig_go_0, int64_t *_swig_go_1) {
  sinsp_proc_metainfo *arg1 = (sinsp_proc_metainfo *) 0 ;
  int64_t arg2 ;
  int64_t *argp2 ;
  
  arg1 = *(sinsp_proc_metainfo **)&_swig_go_0; 
  
  argp2 = (int64_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null int64_t");
  }
  arg2 = (int64_t)*argp2;
  
  
  if (arg1) (arg1)->m_cur_procinfo_evt = arg2;
  
}


int64_t *_wrap_sinsp_proc_metainfo_m_cur_procinfo_evt_get_sysdigswiglib_f325d3b2c40a36ce(sinsp_proc_metainfo *_swig_go_0) {
  sinsp_proc_metainfo *arg1 = (sinsp_proc_metainfo *) 0 ;
  int64_t result;
  int64_t *_swig_go_result;
  
  arg1 = *(sinsp_proc_metainfo **)&_swig_go_0; 
  
  result =  ((arg1)->m_cur_procinfo_evt);
  *(int64_t **)&_swig_go_result = new int64_t(result); 
  return _swig_go_result;
}


void _wrap_sinsp_proc_metainfo_m_pli_set_sysdigswiglib_f325d3b2c40a36ce(sinsp_proc_metainfo *_swig_go_0, ppm_proclist_info *_swig_go_1) {
  sinsp_proc_metainfo *arg1 = (sinsp_proc_metainfo *) 0 ;
  ppm_proclist_info *arg2 = (ppm_proclist_info *) 0 ;
  
  arg1 = *(sinsp_proc_metainfo **)&_swig_go_0; 
  arg2 = *(ppm_proclist_info **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_pli = arg2;
  
}


ppm_proclist_info *_wrap_sinsp_proc_metainfo_m_pli_get_sysdigswiglib_f325d3b2c40a36ce(sinsp_proc_metainfo *_swig_go_0) {
  sinsp_proc_metainfo *arg1 = (sinsp_proc_metainfo *) 0 ;
  ppm_proclist_info *result = 0 ;
  ppm_proclist_info *_swig_go_result;
  
  arg1 = *(sinsp_proc_metainfo **)&_swig_go_0; 
  
  result = (ppm_proclist_info *) ((arg1)->m_pli);
  *(ppm_proclist_info **)&_swig_go_result = (ppm_proclist_info *)result; 
  return _swig_go_result;
}


void _wrap_sinsp_proc_metainfo_m_next_evt_set_sysdigswiglib_f325d3b2c40a36ce(sinsp_proc_metainfo *_swig_go_0, sinsp_evt *_swig_go_1) {
  sinsp_proc_metainfo *arg1 = (sinsp_proc_metainfo *) 0 ;
  sinsp_evt *arg2 = (sinsp_evt *) 0 ;
  
  arg1 = *(sinsp_proc_metainfo **)&_swig_go_0; 
  arg2 = *(sinsp_evt **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_next_evt = arg2;
  
}


sinsp_evt *_wrap_sinsp_proc_metainfo_m_next_evt_get_sysdigswiglib_f325d3b2c40a36ce(sinsp_proc_metainfo *_swig_go_0) {
  sinsp_proc_metainfo *arg1 = (sinsp_proc_metainfo *) 0 ;
  sinsp_evt *result = 0 ;
  sinsp_evt *_swig_go_result;
  
  arg1 = *(sinsp_proc_metainfo **)&_swig_go_0; 
  
  result = (sinsp_evt *) ((arg1)->m_next_evt);
  *(sinsp_evt **)&_swig_go_result = (sinsp_evt *)result; 
  return _swig_go_result;
}


sinsp_proc_metainfo *_wrap_new_sinsp_proc_metainfo_sysdigswiglib_f325d3b2c40a36ce() {
  sinsp_proc_metainfo *result = 0 ;
  sinsp_proc_metainfo *_swig_go_result;
  
  
  result = (sinsp_proc_metainfo *)new sinsp_proc_metainfo();
  *(sinsp_proc_metainfo **)&_swig_go_result = (sinsp_proc_metainfo *)result; 
  return _swig_go_result;
}


void _wrap_delete_sinsp_proc_metainfo_sysdigswiglib_f325d3b2c40a36ce(sinsp_proc_metainfo *_swig_go_0) {
  sinsp_proc_metainfo *arg1 = (sinsp_proc_metainfo *) 0 ;
  
  arg1 = *(sinsp_proc_metainfo **)&_swig_go_0; 
  
  delete arg1;
  
}


sinsp *_wrap_new_sinsp_sysdigswiglib_f325d3b2c40a36ce() {
  sinsp *result = 0 ;
  sinsp *_swig_go_result;
  
  
  result = (sinsp *)new sinsp();
  *(sinsp **)&_swig_go_result = (sinsp *)result; 
  return _swig_go_result;
}


void _wrap_delete_sinsp_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0) {
  sinsp *arg1 = (sinsp *) 0 ;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  delete arg1;
  
}


void _wrap_sinsp_open__SWIG_0_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0, uint32_t *_swig_go_1) {
  sinsp *arg1 = (sinsp *) 0 ;
  uint32_t arg2 ;
  uint32_t *argp2 ;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  argp2 = (uint32_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null uint32_t");
  }
  arg2 = (uint32_t)*argp2;
  
  
  (arg1)->open(arg2);
  
}


void _wrap_sinsp_open__SWIG_1_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0) {
  sinsp *arg1 = (sinsp *) 0 ;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  (arg1)->open();
  
}


void _wrap_sinsp_open__SWIG_2_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0, _gostring_ _swig_go_1) {
  sinsp *arg1 = (sinsp *) 0 ;
  std::string arg2 ;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  (&arg2)->assign(_swig_go_1.p, _swig_go_1.n); 
  
  (arg1)->open(arg2);
  
}


void _wrap_sinsp_fdopen_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0, intgo _swig_go_1) {
  sinsp *arg1 = (sinsp *) 0 ;
  int arg2 ;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  arg2 = (int)_swig_go_1; 
  
  (arg1)->fdopen(arg2);
  
}


void _wrap_sinsp_open_nodriver_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0) {
  sinsp *arg1 = (sinsp *) 0 ;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  (arg1)->open_nodriver();
  
}


void _wrap_sinsp_close_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0) {
  sinsp *arg1 = (sinsp *) 0 ;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  (arg1)->close();
  
}


int32_t *_wrap_sinsp_next_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0, sinsp_evt **_swig_go_1) {
  sinsp *arg1 = (sinsp *) 0 ;
  sinsp_evt **arg2 = (sinsp_evt **) 0 ;
  int32_t result;
  int32_t *_swig_go_result;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  arg2 = *(sinsp_evt ***)&_swig_go_1; 
  
  result = (arg1)->next(arg2);
  *(int32_t **)&_swig_go_result = new int32_t(result); 
  return _swig_go_result;
}


uint64_t *_wrap_sinsp_get_num_events_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0) {
  sinsp *arg1 = (sinsp *) 0 ;
  uint64_t result;
  uint64_t *_swig_go_result;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  result = (arg1)->get_num_events();
  *(uint64_t **)&_swig_go_result = new uint64_t(result); 
  return _swig_go_result;
}


void _wrap_sinsp_set_snaplen_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0, uint32_t *_swig_go_1) {
  sinsp *arg1 = (sinsp *) 0 ;
  uint32_t arg2 ;
  uint32_t *argp2 ;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  argp2 = (uint32_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null uint32_t");
  }
  arg2 = (uint32_t)*argp2;
  
  
  (arg1)->set_snaplen(arg2);
  
}


void _wrap_sinsp_set_import_users_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0, bool _swig_go_1) {
  sinsp *arg1 = (sinsp *) 0 ;
  bool arg2 ;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  (arg1)->set_import_users(arg2);
  
}


void _wrap_sinsp_stop_capture_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0) {
  sinsp *arg1 = (sinsp *) 0 ;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  (arg1)->stop_capture();
  
}


void _wrap_sinsp_start_capture_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0) {
  sinsp *arg1 = (sinsp *) 0 ;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  (arg1)->start_capture();
  
}


void _wrap_sinsp_set_log_callback_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0, sinsp_logger_callback *_swig_go_1) {
  sinsp *arg1 = (sinsp *) 0 ;
  sinsp_logger_callback arg2 ;
  sinsp_logger_callback *argp2 ;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  argp2 = (sinsp_logger_callback *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null sinsp_logger_callback");
  }
  arg2 = (sinsp_logger_callback)*argp2;
  
  
  (arg1)->set_log_callback(arg2);
  
}


void _wrap_sinsp_set_log_file_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0, _gostring_ _swig_go_1) {
  sinsp *arg1 = (sinsp *) 0 ;
  std::string arg2 ;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  (&arg2)->assign(_swig_go_1.p, _swig_go_1.n); 
  
  (arg1)->set_log_file(arg2);
  
}


void _wrap_sinsp_set_log_stderr_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0) {
  sinsp *arg1 = (sinsp *) 0 ;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  (arg1)->set_log_stderr();
  
}


void _wrap_sinsp_set_min_log_severity_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0, sinsp_logger::severity *_swig_go_1) {
  sinsp *arg1 = (sinsp *) 0 ;
  sinsp_logger::severity arg2 ;
  sinsp_logger::severity *argp2 ;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  argp2 = (sinsp_logger::severity *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null sinsp_logger::severity");
  }
  arg2 = (sinsp_logger::severity)*argp2;
  
  
  (arg1)->set_min_log_severity(arg2);
  
}


void _wrap_sinsp_autodump_start_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0, _gostring_ _swig_go_1, bool _swig_go_2) {
  sinsp *arg1 = (sinsp *) 0 ;
  std::string *arg2 = 0 ;
  bool arg3 ;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  std::string arg2_str(_swig_go_1.p, _swig_go_1.n);
  arg2 = &arg2_str;
  
  arg3 = (bool)_swig_go_2; 
  
  (arg1)->autodump_start((std::string const &)*arg2,arg3);
  
}


void _wrap_sinsp_autodump_next_file_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0) {
  sinsp *arg1 = (sinsp *) 0 ;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  (arg1)->autodump_next_file();
  
}


void _wrap_sinsp_autodump_stop_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0) {
  sinsp *arg1 = (sinsp *) 0 ;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  (arg1)->autodump_stop();
  
}


void _wrap_sinsp_get_filtercheck_fields_info_sysdigswiglib_f325d3b2c40a36ce(std::vector< filter_check_info const * > *_swig_go_0) {
  std::vector< filter_check_info const * > *arg1 = (std::vector< filter_check_info const * > *) 0 ;
  
  arg1 = *(std::vector< filter_check_info const * > **)&_swig_go_0; 
  
  sinsp::get_filtercheck_fields_info(arg1);
  
}


bool _wrap_sinsp_has_metrics_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0) {
  sinsp *arg1 = (sinsp *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  result = (bool)(arg1)->has_metrics();
  _swig_go_result = result; 
  return _swig_go_result;
}


scap_machine_info *_wrap_sinsp_get_machine_info_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0) {
  sinsp *arg1 = (sinsp *) 0 ;
  scap_machine_info *result = 0 ;
  scap_machine_info *_swig_go_result;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  result = (scap_machine_info *)(arg1)->get_machine_info();
  *(scap_machine_info **)&_swig_go_result = (scap_machine_info *)result; 
  return _swig_go_result;
}


sinsp_threadinfo *_wrap_sinsp_get_thread__SWIG_0_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0, int64_t *_swig_go_1) {
  sinsp *arg1 = (sinsp *) 0 ;
  int64_t arg2 ;
  int64_t *argp2 ;
  sinsp_threadinfo *result = 0 ;
  sinsp_threadinfo *_swig_go_result;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  argp2 = (int64_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null int64_t");
  }
  arg2 = (int64_t)*argp2;
  
  
  result = (sinsp_threadinfo *)(arg1)->get_thread(arg2);
  *(sinsp_threadinfo **)&_swig_go_result = (sinsp_threadinfo *)result; 
  return _swig_go_result;
}


sinsp_threadinfo *_wrap_sinsp_get_thread__SWIG_1_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0, int64_t *_swig_go_1, bool _swig_go_2, bool _swig_go_3) {
  sinsp *arg1 = (sinsp *) 0 ;
  int64_t arg2 ;
  bool arg3 ;
  bool arg4 ;
  int64_t *argp2 ;
  sinsp_threadinfo *result = 0 ;
  sinsp_threadinfo *_swig_go_result;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  argp2 = (int64_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null int64_t");
  }
  arg2 = (int64_t)*argp2;
  
  arg3 = (bool)_swig_go_2; 
  arg4 = (bool)_swig_go_3; 
  
  result = (sinsp_threadinfo *)(arg1)->get_thread(arg2,arg3,arg4);
  *(sinsp_threadinfo **)&_swig_go_result = (sinsp_threadinfo *)result; 
  return _swig_go_result;
}


threadinfo_map_t::ptr_t *_wrap_sinsp_get_thread_ref_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0, int64_t *_swig_go_1, bool _swig_go_2, bool _swig_go_3) {
  sinsp *arg1 = (sinsp *) 0 ;
  int64_t arg2 ;
  bool arg3 ;
  bool arg4 ;
  int64_t *argp2 ;
  threadinfo_map_t::ptr_t result;
  threadinfo_map_t::ptr_t *_swig_go_result;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  argp2 = (int64_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null int64_t");
  }
  arg2 = (int64_t)*argp2;
  
  arg3 = (bool)_swig_go_2; 
  arg4 = (bool)_swig_go_3; 
  
  result = (arg1)->get_thread_ref(arg2,arg3,arg4);
  *(threadinfo_map_t::ptr_t **)&_swig_go_result = new threadinfo_map_t::ptr_t(result); 
  return _swig_go_result;
}


unordered_map< uint32_t,scap_userinfo * > *_wrap_sinsp_get_userlist_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0) {
  sinsp *arg1 = (sinsp *) 0 ;
  unordered_map< uint32_t,scap_userinfo * > *result = 0 ;
  unordered_map< uint32_t,scap_userinfo * > *_swig_go_result;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  result = (unordered_map< uint32_t,scap_userinfo * > *)(arg1)->get_userlist();
  *(unordered_map< uint32_t,scap_userinfo * > **)&_swig_go_result = (unordered_map< uint32_t,scap_userinfo * > *)result; 
  return _swig_go_result;
}


unordered_map< uint32_t,scap_groupinfo * > *_wrap_sinsp_get_grouplist_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0) {
  sinsp *arg1 = (sinsp *) 0 ;
  unordered_map< uint32_t,scap_groupinfo * > *result = 0 ;
  unordered_map< uint32_t,scap_groupinfo * > *_swig_go_result;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  result = (unordered_map< uint32_t,scap_groupinfo * > *)(arg1)->get_grouplist();
  *(unordered_map< uint32_t,scap_groupinfo * > **)&_swig_go_result = (unordered_map< uint32_t,scap_groupinfo * > *)result; 
  return _swig_go_result;
}


void _wrap_sinsp_get_capture_stats_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0, scap_stats *_swig_go_1) {
  sinsp *arg1 = (sinsp *) 0 ;
  scap_stats *arg2 = (scap_stats *) 0 ;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  arg2 = *(scap_stats **)&_swig_go_1; 
  
  (arg1)->get_capture_stats(arg2);
  
}


void _wrap_sinsp_set_max_thread_table_size_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0, uint32_t *_swig_go_1) {
  sinsp *arg1 = (sinsp *) 0 ;
  uint32_t arg2 ;
  uint32_t *argp2 ;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  argp2 = (uint32_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null uint32_t");
  }
  arg2 = (uint32_t)*argp2;
  
  
  (arg1)->set_max_thread_table_size(arg2);
  
}


sinsp_evttables *_wrap_sinsp_get_event_info_tables_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0) {
  sinsp *arg1 = (sinsp *) 0 ;
  sinsp_evttables *result = 0 ;
  sinsp_evttables *_swig_go_result;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  result = (sinsp_evttables *)(arg1)->get_event_info_tables();
  *(sinsp_evttables **)&_swig_go_result = (sinsp_evttables *)result; 
  return _swig_go_result;
}


_gostring_ _wrap_sinsp_getlasterr_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0) {
  sinsp *arg1 = (sinsp *) 0 ;
  std::string result;
  _gostring_ _swig_go_result;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  result = (arg1)->getlasterr();
  _swig_go_result = Swig_AllocateString((&result)->data(), (&result)->length()); 
  return _swig_go_result;
}


void _wrap_sinsp_add_chisel_dir_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0, _gostring_ _swig_go_1, bool _swig_go_2) {
  sinsp *arg1 = (sinsp *) 0 ;
  std::string arg2 ;
  bool arg3 ;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  (&arg2)->assign(_swig_go_1.p, _swig_go_1.n); 
  arg3 = (bool)_swig_go_2; 
  
  (arg1)->add_chisel_dir(arg2,arg3);
  
}


sinsp_network_interfaces *_wrap_sinsp_get_ifaddr_list_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0) {
  sinsp *arg1 = (sinsp *) 0 ;
  sinsp_network_interfaces *result = 0 ;
  sinsp_network_interfaces *_swig_go_result;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  result = (sinsp_network_interfaces *)(arg1)->get_ifaddr_list();
  *(sinsp_network_interfaces **)&_swig_go_result = (sinsp_network_interfaces *)result; 
  return _swig_go_result;
}


void _wrap_sinsp_set_buffer_format_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0, sinsp_evt::param_fmt *_swig_go_1) {
  sinsp *arg1 = (sinsp *) 0 ;
  sinsp_evt::param_fmt arg2 ;
  sinsp_evt::param_fmt *argp2 ;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  argp2 = (sinsp_evt::param_fmt *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null sinsp_evt::param_fmt");
  }
  arg2 = (sinsp_evt::param_fmt)*argp2;
  
  
  (arg1)->set_buffer_format(arg2);
  
}


sinsp_evt::param_fmt *_wrap_sinsp_get_buffer_format_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0) {
  sinsp *arg1 = (sinsp *) 0 ;
  sinsp_evt::param_fmt result;
  sinsp_evt::param_fmt *_swig_go_result;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  result = (arg1)->get_buffer_format();
  *(sinsp_evt::param_fmt **)&_swig_go_result = new sinsp_evt::param_fmt(result); 
  return _swig_go_result;
}


void _wrap_sinsp_set_drop_event_flags_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0, ppm_event_flags *_swig_go_1) {
  sinsp *arg1 = (sinsp *) 0 ;
  ppm_event_flags arg2 ;
  ppm_event_flags *argp2 ;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  argp2 = (ppm_event_flags *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null ppm_event_flags");
  }
  arg2 = (ppm_event_flags)*argp2;
  
  
  (arg1)->set_drop_event_flags(arg2);
  
}


bool _wrap_sinsp_is_capture_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0) {
  sinsp *arg1 = (sinsp *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  result = (bool)(arg1)->is_capture();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_sinsp_is_live_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0) {
  sinsp *arg1 = (sinsp *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  result = (bool)(arg1)->is_live();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_sinsp_is_nodriver_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0) {
  sinsp *arg1 = (sinsp *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  result = (bool)(arg1)->is_nodriver();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_sinsp_set_debug_mode_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0, bool _swig_go_1) {
  sinsp *arg1 = (sinsp *) 0 ;
  bool arg2 ;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  (arg1)->set_debug_mode(arg2);
  
}


void _wrap_sinsp_set_fatfile_dump_mode_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0, bool _swig_go_1) {
  sinsp *arg1 = (sinsp *) 0 ;
  bool arg2 ;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  (arg1)->set_fatfile_dump_mode(arg2);
  
}


void _wrap_sinsp_set_internal_events_mode_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0, bool _swig_go_1) {
  sinsp *arg1 = (sinsp *) 0 ;
  bool arg2 ;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  (arg1)->set_internal_events_mode(arg2);
  
}


void _wrap_sinsp_set_hostname_and_port_resolution_mode_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0, bool _swig_go_1) {
  sinsp *arg1 = (sinsp *) 0 ;
  bool arg2 ;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  (arg1)->set_hostname_and_port_resolution_mode(arg2);
  
}


void _wrap_sinsp_set_time_output_mode_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0, char _swig_go_1) {
  sinsp *arg1 = (sinsp *) 0 ;
  char arg2 ;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  arg2 = (char)_swig_go_1; 
  
  (arg1)->set_time_output_mode(arg2);
  
}


void _wrap_sinsp_set_max_evt_output_len_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0, uint32_t *_swig_go_1) {
  sinsp *arg1 = (sinsp *) 0 ;
  uint32_t arg2 ;
  uint32_t *argp2 ;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  argp2 = (uint32_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null uint32_t");
  }
  arg2 = (uint32_t)*argp2;
  
  
  (arg1)->set_max_evt_output_len(arg2);
  
}


bool _wrap_sinsp_is_debug_enabled_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0) {
  sinsp *arg1 = (sinsp *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  result = (bool)(arg1)->is_debug_enabled();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_sinsp_set_print_container_data_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0, bool _swig_go_1) {
  sinsp *arg1 = (sinsp *) 0 ;
  bool arg2 ;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  (arg1)->set_print_container_data(arg2);
  
}


bool _wrap_sinsp_is_print_container_data_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0) {
  sinsp *arg1 = (sinsp *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  result = (bool)(arg1)->is_print_container_data();
  _swig_go_result = result; 
  return _swig_go_result;
}


sinsp_protodecoder *_wrap_sinsp_require_protodecoder_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0, _gostring_ _swig_go_1) {
  sinsp *arg1 = (sinsp *) 0 ;
  std::string arg2 ;
  sinsp_protodecoder *result = 0 ;
  sinsp_protodecoder *_swig_go_result;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  (&arg2)->assign(_swig_go_1.p, _swig_go_1.n); 
  
  result = (sinsp_protodecoder *)(arg1)->require_protodecoder(arg2);
  *(sinsp_protodecoder **)&_swig_go_result = (sinsp_protodecoder *)result; 
  return _swig_go_result;
}


void _wrap_sinsp_protodecoder_register_reset_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0, sinsp_protodecoder *_swig_go_1) {
  sinsp *arg1 = (sinsp *) 0 ;
  sinsp_protodecoder *arg2 = (sinsp_protodecoder *) 0 ;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  arg2 = *(sinsp_protodecoder **)&_swig_go_1; 
  
  (arg1)->protodecoder_register_reset(arg2);
  
}


_gostring_ _wrap_sinsp_get_input_filename_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0) {
  sinsp *arg1 = (sinsp *) 0 ;
  std::string result;
  _gostring_ _swig_go_result;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  result = (arg1)->get_input_filename();
  _swig_go_result = Swig_AllocateString((&result)->data(), (&result)->length()); 
  return _swig_go_result;
}


void _wrap_sinsp_set_eventmask_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0, uint32_t *_swig_go_1) {
  sinsp *arg1 = (sinsp *) 0 ;
  uint32_t arg2 ;
  uint32_t *argp2 ;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  argp2 = (uint32_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null uint32_t");
  }
  arg2 = (uint32_t)*argp2;
  
  
  (arg1)->set_eventmask(arg2);
  
}


void _wrap_sinsp_unset_eventmask_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0, uint32_t *_swig_go_1) {
  sinsp *arg1 = (sinsp *) 0 ;
  uint32_t arg2 ;
  uint32_t *argp2 ;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  argp2 = (uint32_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null uint32_t");
  }
  arg2 = (uint32_t)*argp2;
  
  
  (arg1)->unset_eventmask(arg2);
  
}


double _wrap_sinsp_get_read_progress_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0) {
  sinsp *arg1 = (sinsp *) 0 ;
  double result;
  double _swig_go_result;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  result = (double)(arg1)->get_read_progress();
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_sinsp_init_k8s_ssl_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0, _gostring_* _swig_go_1) {
  sinsp *arg1 = (sinsp *) 0 ;
  std::string *arg2 = (std::string *) 0 ;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  arg2 = *(std::string **)&_swig_go_1; 
  
  (arg1)->init_k8s_ssl((std::string const *)arg2);
  
}


void _wrap_sinsp_init_k8s_client__SWIG_0_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0, _gostring_* _swig_go_1, _gostring_* _swig_go_2, bool _swig_go_3) {
  sinsp *arg1 = (sinsp *) 0 ;
  std::string *arg2 = (std::string *) 0 ;
  std::string *arg3 = (std::string *) 0 ;
  bool arg4 ;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  arg2 = *(std::string **)&_swig_go_1; 
  arg3 = *(std::string **)&_swig_go_2; 
  arg4 = (bool)_swig_go_3; 
  
  (arg1)->init_k8s_client(arg2,arg3,arg4);
  
}


void _wrap_sinsp_init_k8s_client__SWIG_1_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0, _gostring_* _swig_go_1, _gostring_* _swig_go_2) {
  sinsp *arg1 = (sinsp *) 0 ;
  std::string *arg2 = (std::string *) 0 ;
  std::string *arg3 = (std::string *) 0 ;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  arg2 = *(std::string **)&_swig_go_1; 
  arg3 = *(std::string **)&_swig_go_2; 
  
  (arg1)->init_k8s_client(arg2,arg3);
  
}


void _wrap_sinsp_make_k8s_client_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0) {
  sinsp *arg1 = (sinsp *) 0 ;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  (arg1)->make_k8s_client();
  
}


k8s *_wrap_sinsp_get_k8s_client_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0) {
  sinsp *arg1 = (sinsp *) 0 ;
  k8s *result = 0 ;
  k8s *_swig_go_result;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  result = (k8s *)((sinsp const *)arg1)->get_k8s_client();
  *(k8s **)&_swig_go_result = (k8s *)result; 
  return _swig_go_result;
}


void _wrap_sinsp_init_mesos_client__SWIG_0_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0, _gostring_* _swig_go_1, bool _swig_go_2) {
  sinsp *arg1 = (sinsp *) 0 ;
  std::string *arg2 = (std::string *) 0 ;
  bool arg3 ;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  arg2 = *(std::string **)&_swig_go_1; 
  arg3 = (bool)_swig_go_2; 
  
  (arg1)->init_mesos_client(arg2,arg3);
  
}


void _wrap_sinsp_init_mesos_client__SWIG_1_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0, _gostring_* _swig_go_1) {
  sinsp *arg1 = (sinsp *) 0 ;
  std::string *arg2 = (std::string *) 0 ;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  arg2 = *(std::string **)&_swig_go_1; 
  
  (arg1)->init_mesos_client(arg2);
  
}


mesos *_wrap_sinsp_get_mesos_client_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0) {
  sinsp *arg1 = (sinsp *) 0 ;
  mesos *result = 0 ;
  mesos *_swig_go_result;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  result = (mesos *)((sinsp const *)arg1)->get_mesos_client();
  *(mesos **)&_swig_go_result = (mesos *)result; 
  return _swig_go_result;
}


void _wrap_sinsp_stop_dropping_mode_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0) {
  sinsp *arg1 = (sinsp *) 0 ;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  (arg1)->stop_dropping_mode();
  
}


void _wrap_sinsp_start_dropping_mode_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0, uint32_t *_swig_go_1) {
  sinsp *arg1 = (sinsp *) 0 ;
  uint32_t arg2 ;
  uint32_t *argp2 ;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  argp2 = (uint32_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null uint32_t");
  }
  arg2 = (uint32_t)*argp2;
  
  
  (arg1)->start_dropping_mode(arg2);
  
}


void _wrap_sinsp_on_new_entry_from_proc_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0, void *_swig_go_1, scap_t *_swig_go_2, int64_t *_swig_go_3, scap_threadinfo *_swig_go_4, scap_fdinfo *_swig_go_5) {
  sinsp *arg1 = (sinsp *) 0 ;
  void *arg2 = (void *) 0 ;
  scap_t *arg3 = (scap_t *) 0 ;
  int64_t arg4 ;
  scap_threadinfo *arg5 = (scap_threadinfo *) 0 ;
  scap_fdinfo *arg6 = (scap_fdinfo *) 0 ;
  int64_t *argp4 ;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  arg3 = *(scap_t **)&_swig_go_2; 
  
  argp4 = (int64_t *)_swig_go_3;
  if (argp4 == NULL) {
    _swig_gopanic("Attempt to dereference null int64_t");
  }
  arg4 = (int64_t)*argp4;
  
  arg5 = *(scap_threadinfo **)&_swig_go_4; 
  arg6 = *(scap_fdinfo **)&_swig_go_5; 
  
  (arg1)->on_new_entry_from_proc(arg2,arg3,arg4,arg5,arg6);
  
}


void _wrap_sinsp_set_get_procs_cpu_from_driver_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0, bool _swig_go_1) {
  sinsp *arg1 = (sinsp *) 0 ;
  bool arg2 ;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  (arg1)->set_get_procs_cpu_from_driver(arg2);
  
}


void _wrap_sinsp_request_tracer_state_tracking_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0) {
  sinsp *arg1 = (sinsp *) 0 ;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  (arg1)->request_tracer_state_tracking();
  
}


uint32_t *_wrap_sinsp_reserve_thread_memory_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0, uint32_t *_swig_go_1) {
  sinsp *arg1 = (sinsp *) 0 ;
  uint32_t arg2 ;
  uint32_t *argp2 ;
  uint32_t result;
  uint32_t *_swig_go_result;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  argp2 = (uint32_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null uint32_t");
  }
  arg2 = (uint32_t)*argp2;
  
  
  result = (arg1)->reserve_thread_memory(arg2);
  *(uint32_t **)&_swig_go_result = new uint32_t(result); 
  return _swig_go_result;
}


sinsp_parser *_wrap_sinsp_get_parser_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0) {
  sinsp *arg1 = (sinsp *) 0 ;
  sinsp_parser *result = 0 ;
  sinsp_parser *_swig_go_result;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  result = (sinsp_parser *)(arg1)->get_parser();
  *(sinsp_parser **)&_swig_go_result = (sinsp_parser *)result; 
  return _swig_go_result;
}


bool _wrap_sinsp_setup_cycle_writer_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0, _gostring_ _swig_go_1, intgo _swig_go_2, intgo _swig_go_3, intgo _swig_go_4, long long _swig_go_5, bool _swig_go_6) {
  sinsp *arg1 = (sinsp *) 0 ;
  std::string arg2 ;
  int arg3 ;
  int arg4 ;
  int arg5 ;
  unsigned long arg6 ;
  bool arg7 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  (&arg2)->assign(_swig_go_1.p, _swig_go_1.n); 
  arg3 = (int)_swig_go_2; 
  arg4 = (int)_swig_go_3; 
  arg5 = (int)_swig_go_4; 
  arg6 = (unsigned long)_swig_go_5; 
  arg7 = (bool)_swig_go_6; 
  
  result = (bool)(arg1)->setup_cycle_writer(arg2,arg3,arg4,arg5,arg6,arg7);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_sinsp_import_ipv4_interface_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0, sinsp_ipv4_ifinfo *_swig_go_1) {
  sinsp *arg1 = (sinsp *) 0 ;
  sinsp_ipv4_ifinfo *arg2 = 0 ;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  arg2 = *(sinsp_ipv4_ifinfo **)&_swig_go_1; 
  
  (arg1)->import_ipv4_interface((sinsp_ipv4_ifinfo const &)*arg2);
  
}


void _wrap_sinsp_add_meta_event_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0, sinsp_evt *_swig_go_1) {
  sinsp *arg1 = (sinsp *) 0 ;
  sinsp_evt *arg2 = (sinsp_evt *) 0 ;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  arg2 = *(sinsp_evt **)&_swig_go_1; 
  
  (arg1)->add_meta_event(arg2);
  
}


void _wrap_sinsp_add_meta_event_callback_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0, void** _swig_go_1, void *_swig_go_2) {
  sinsp *arg1 = (sinsp *) 0 ;
  meta_event_callback arg2 = (meta_event_callback) 0 ;
  void *arg3 = (void *) 0 ;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  arg2 = *(meta_event_callback *)&_swig_go_1; 
  arg3 = *(void **)&_swig_go_2; 
  
  (arg1)->add_meta_event_callback(arg2,arg3);
  
}


void _wrap_sinsp_remove_meta_event_callback_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0) {
  sinsp *arg1 = (sinsp *) 0 ;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  (arg1)->remove_meta_event_callback();
  
}


void _wrap_sinsp_filter_proc_table_when_saving_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0, bool _swig_go_1) {
  sinsp *arg1 = (sinsp *) 0 ;
  bool arg2 ;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  (arg1)->filter_proc_table_when_saving(arg2);
  
}


void _wrap_sinsp_enable_tracers_capture_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0) {
  sinsp *arg1 = (sinsp *) 0 ;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  (arg1)->enable_tracers_capture();
  
}


void _wrap_sinsp_enable_page_faults_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0) {
  sinsp *arg1 = (sinsp *) 0 ;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  (arg1)->enable_page_faults();
  
}


uint64_t *_wrap_sinsp_get_bytes_read_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0) {
  sinsp *arg1 = (sinsp *) 0 ;
  uint64_t result;
  uint64_t *_swig_go_result;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  result = (arg1)->get_bytes_read();
  *(uint64_t **)&_swig_go_result = new uint64_t(result); 
  return _swig_go_result;
}


void _wrap_sinsp_refresh_ifaddr_list_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0) {
  sinsp *arg1 = (sinsp *) 0 ;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  (arg1)->refresh_ifaddr_list();
  
}


void _wrap_sinsp_refresh_proc_list_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0) {
  sinsp *arg1 = (sinsp *) 0 ;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  (arg1)->refresh_proc_list();
  
}


void _wrap_sinsp_set_simpledriver_mode_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0) {
  sinsp *arg1 = (sinsp *) 0 ;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  (arg1)->set_simpledriver_mode();
  
}


std::vector< long > *_wrap_sinsp_get_n_tracepoint_hit_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0) {
  sinsp *arg1 = (sinsp *) 0 ;
  SwigValueWrapper< std::vector< long > > result;
  std::vector< long > *_swig_go_result;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  result = (arg1)->get_n_tracepoint_hit();
  *(std::vector< long > **)&_swig_go_result = new std::vector< long >(result); 
  return _swig_go_result;
}


void _wrap_sinsp_set_bpf_probe_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0, _gostring_ _swig_go_1) {
  sinsp *arg1 = (sinsp *) 0 ;
  std::string *arg2 = 0 ;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  std::string arg2_str(_swig_go_1.p, _swig_go_1.n);
  arg2 = &arg2_str;
  
  
  (arg1)->set_bpf_probe((std::string const &)*arg2);
  
}


intgo _wrap_sinsp_num_possible_cpus_sysdigswiglib_f325d3b2c40a36ce() {
  unsigned int result;
  intgo _swig_go_result;
  
  
  result = (unsigned int)sinsp::num_possible_cpus();
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_sinsp_falco_consider_evtnum_sysdigswiglib_f325d3b2c40a36ce(uint16_t *_swig_go_0) {
  uint16_t arg1 ;
  uint16_t *argp1 ;
  bool result;
  bool _swig_go_result;
  
  
  argp1 = (uint16_t *)_swig_go_0;
  if (argp1 == NULL) {
    _swig_gopanic("Attempt to dereference null uint16_t");
  }
  arg1 = (uint16_t)*argp1;
  
  
  result = (bool)sinsp::falco_consider_evtnum(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_sinsp_falco_consider_syscallid_sysdigswiglib_f325d3b2c40a36ce(uint16_t *_swig_go_0) {
  uint16_t arg1 ;
  uint16_t *argp1 ;
  bool result;
  bool _swig_go_result;
  
  
  argp1 = (uint16_t *)_swig_go_0;
  if (argp1 == NULL) {
    _swig_gopanic("Attempt to dereference null uint16_t");
  }
  arg1 = (uint16_t)*argp1;
  
  
  result = (bool)sinsp::falco_consider_syscallid(arg1);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_sinsp_suppress_events_comm_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0, _gostring_ _swig_go_1) {
  sinsp *arg1 = (sinsp *) 0 ;
  std::string *arg2 = 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  std::string arg2_str(_swig_go_1.p, _swig_go_1.n);
  arg2 = &arg2_str;
  
  
  result = (bool)(arg1)->suppress_events_comm((std::string const &)*arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


bool _wrap_sinsp_check_suppressed_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0, int64_t *_swig_go_1) {
  sinsp *arg1 = (sinsp *) 0 ;
  int64_t arg2 ;
  int64_t *argp2 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  argp2 = (int64_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null int64_t");
  }
  arg2 = (int64_t)*argp2;
  
  
  result = (bool)(arg1)->check_suppressed(arg2);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_sinsp_set_query_docker_image_info_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0, bool _swig_go_1) {
  sinsp *arg1 = (sinsp *) 0 ;
  bool arg2 ;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  (arg1)->set_query_docker_image_info(arg2);
  
}


void _wrap_sinsp_m_thread_manager_set_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0, sinsp_thread_manager *_swig_go_1) {
  sinsp *arg1 = (sinsp *) 0 ;
  sinsp_thread_manager *arg2 = (sinsp_thread_manager *) 0 ;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  arg2 = *(sinsp_thread_manager **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_thread_manager = arg2;
  
}


sinsp_thread_manager *_wrap_sinsp_m_thread_manager_get_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0) {
  sinsp *arg1 = (sinsp *) 0 ;
  sinsp_thread_manager *result = 0 ;
  sinsp_thread_manager *_swig_go_result;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  result = (sinsp_thread_manager *) ((arg1)->m_thread_manager);
  *(sinsp_thread_manager **)&_swig_go_result = (sinsp_thread_manager *)result; 
  return _swig_go_result;
}


void _wrap_sinsp_m_container_manager_set_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0, sinsp_container_manager *_swig_go_1) {
  sinsp *arg1 = (sinsp *) 0 ;
  sinsp_container_manager arg2 ;
  sinsp_container_manager *argp2 ;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  argp2 = (sinsp_container_manager *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null sinsp_container_manager");
  }
  arg2 = (sinsp_container_manager)*argp2;
  
  
  if (arg1) (arg1)->m_container_manager = arg2;
  
}


sinsp_container_manager *_wrap_sinsp_m_container_manager_get_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0) {
  sinsp *arg1 = (sinsp *) 0 ;
  sinsp_container_manager result;
  sinsp_container_manager *_swig_go_result;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  result =  ((arg1)->m_container_manager);
  *(sinsp_container_manager **)&_swig_go_result = new sinsp_container_manager(result); 
  return _swig_go_result;
}


void _wrap_sinsp_m_k8s_api_server_set_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0, _gostring_* _swig_go_1) {
  sinsp *arg1 = (sinsp *) 0 ;
  std::string *arg2 = (std::string *) 0 ;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  arg2 = *(std::string **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_k8s_api_server = arg2;
  
}


_gostring_* _wrap_sinsp_m_k8s_api_server_get_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0) {
  sinsp *arg1 = (sinsp *) 0 ;
  std::string *result = 0 ;
  _gostring_* _swig_go_result;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  result = (std::string *) ((arg1)->m_k8s_api_server);
  *(std::string **)&_swig_go_result = (std::string *)result; 
  return _swig_go_result;
}


void _wrap_sinsp_m_k8s_api_cert_set_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0, _gostring_* _swig_go_1) {
  sinsp *arg1 = (sinsp *) 0 ;
  std::string *arg2 = (std::string *) 0 ;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  arg2 = *(std::string **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_k8s_api_cert = arg2;
  
}


_gostring_* _wrap_sinsp_m_k8s_api_cert_get_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0) {
  sinsp *arg1 = (sinsp *) 0 ;
  std::string *result = 0 ;
  _gostring_* _swig_go_result;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  result = (std::string *) ((arg1)->m_k8s_api_cert);
  *(std::string **)&_swig_go_result = (std::string *)result; 
  return _swig_go_result;
}


void _wrap_sinsp_m_k8s_client_set_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0, k8s *_swig_go_1) {
  sinsp *arg1 = (sinsp *) 0 ;
  k8s *arg2 = (k8s *) 0 ;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  arg2 = *(k8s **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_k8s_client = arg2;
  
}


k8s *_wrap_sinsp_m_k8s_client_get_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0) {
  sinsp *arg1 = (sinsp *) 0 ;
  k8s *result = 0 ;
  k8s *_swig_go_result;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  result = (k8s *) ((arg1)->m_k8s_client);
  *(k8s **)&_swig_go_result = (k8s *)result; 
  return _swig_go_result;
}


void _wrap_sinsp_m_k8s_last_watch_time_ns_set_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0, uint64_t *_swig_go_1) {
  sinsp *arg1 = (sinsp *) 0 ;
  uint64_t arg2 ;
  uint64_t *argp2 ;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  argp2 = (uint64_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null uint64_t");
  }
  arg2 = (uint64_t)*argp2;
  
  
  if (arg1) (arg1)->m_k8s_last_watch_time_ns = arg2;
  
}


uint64_t *_wrap_sinsp_m_k8s_last_watch_time_ns_get_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0) {
  sinsp *arg1 = (sinsp *) 0 ;
  uint64_t result;
  uint64_t *_swig_go_result;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  result =  ((arg1)->m_k8s_last_watch_time_ns);
  *(uint64_t **)&_swig_go_result = new uint64_t(result); 
  return _swig_go_result;
}


void _wrap_sinsp_m_mesos_api_server_set_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0, _gostring_ _swig_go_1) {
  sinsp *arg1 = (sinsp *) 0 ;
  std::string *arg2 = 0 ;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  std::string arg2_str(_swig_go_1.p, _swig_go_1.n);
  arg2 = &arg2_str;
  
  
  if (arg1) (arg1)->m_mesos_api_server = *arg2;
  
}


_gostring_ _wrap_sinsp_m_mesos_api_server_get_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0) {
  sinsp *arg1 = (sinsp *) 0 ;
  std::string *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  result = (std::string *) & ((arg1)->m_mesos_api_server);
  _swig_go_result = Swig_AllocateString((*result).data(), (*result).length()); 
  return _swig_go_result;
}


void _wrap_sinsp_m_marathon_api_server_set_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0, std::vector< std::string > *_swig_go_1) {
  sinsp *arg1 = (sinsp *) 0 ;
  std::vector< std::string > *arg2 = (std::vector< std::string > *) 0 ;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  arg2 = *(std::vector< std::string > **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_marathon_api_server = *arg2;
  
}


std::vector< std::string > *_wrap_sinsp_m_marathon_api_server_get_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0) {
  sinsp *arg1 = (sinsp *) 0 ;
  std::vector< std::string > *result = 0 ;
  std::vector< std::string > *_swig_go_result;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  result = (std::vector< std::string > *)& ((arg1)->m_marathon_api_server);
  *(std::vector< std::string > **)&_swig_go_result = (std::vector< std::string > *)result; 
  return _swig_go_result;
}


void _wrap_sinsp_m_mesos_client_set_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0, mesos *_swig_go_1) {
  sinsp *arg1 = (sinsp *) 0 ;
  mesos *arg2 = (mesos *) 0 ;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  arg2 = *(mesos **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_mesos_client = arg2;
  
}


mesos *_wrap_sinsp_m_mesos_client_get_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0) {
  sinsp *arg1 = (sinsp *) 0 ;
  mesos *result = 0 ;
  mesos *_swig_go_result;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  result = (mesos *) ((arg1)->m_mesos_client);
  *(mesos **)&_swig_go_result = (mesos *)result; 
  return _swig_go_result;
}


void _wrap_sinsp_m_mesos_last_watch_time_ns_set_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0, uint64_t *_swig_go_1) {
  sinsp *arg1 = (sinsp *) 0 ;
  uint64_t arg2 ;
  uint64_t *argp2 ;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  argp2 = (uint64_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null uint64_t");
  }
  arg2 = (uint64_t)*argp2;
  
  
  if (arg1) (arg1)->m_mesos_last_watch_time_ns = arg2;
  
}


uint64_t *_wrap_sinsp_m_mesos_last_watch_time_ns_get_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0) {
  sinsp *arg1 = (sinsp *) 0 ;
  uint64_t result;
  uint64_t *_swig_go_result;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  result =  ((arg1)->m_mesos_last_watch_time_ns);
  *(uint64_t **)&_swig_go_result = new uint64_t(result); 
  return _swig_go_result;
}


void _wrap_sinsp_m_verbose_json_set_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0, bool _swig_go_1) {
  sinsp *arg1 = (sinsp *) 0 ;
  bool arg2 ;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->m_verbose_json = arg2;
  
}


bool _wrap_sinsp_m_verbose_json_get_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0) {
  sinsp *arg1 = (sinsp *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  result = (bool) ((arg1)->m_verbose_json);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_sinsp_m_print_container_data_set_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0, bool _swig_go_1) {
  sinsp *arg1 = (sinsp *) 0 ;
  bool arg2 ;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->m_print_container_data = arg2;
  
}


bool _wrap_sinsp_m_print_container_data_get_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0) {
  sinsp *arg1 = (sinsp *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  result = (bool) ((arg1)->m_print_container_data);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_sinsp_m_n_proc_lookups_set_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0, int32_t *_swig_go_1) {
  sinsp *arg1 = (sinsp *) 0 ;
  int32_t arg2 ;
  int32_t *argp2 ;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  argp2 = (int32_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null int32_t");
  }
  arg2 = (int32_t)*argp2;
  
  
  if (arg1) (arg1)->m_n_proc_lookups = arg2;
  
}


int32_t *_wrap_sinsp_m_n_proc_lookups_get_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0) {
  sinsp *arg1 = (sinsp *) 0 ;
  int32_t result;
  int32_t *_swig_go_result;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  result =  ((arg1)->m_n_proc_lookups);
  *(int32_t **)&_swig_go_result = new int32_t(result); 
  return _swig_go_result;
}


void _wrap_sinsp_m_n_proc_lookups_duration_ns_set_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0, uint64_t *_swig_go_1) {
  sinsp *arg1 = (sinsp *) 0 ;
  uint64_t arg2 ;
  uint64_t *argp2 ;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  argp2 = (uint64_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null uint64_t");
  }
  arg2 = (uint64_t)*argp2;
  
  
  if (arg1) (arg1)->m_n_proc_lookups_duration_ns = arg2;
  
}


uint64_t *_wrap_sinsp_m_n_proc_lookups_duration_ns_get_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0) {
  sinsp *arg1 = (sinsp *) 0 ;
  uint64_t result;
  uint64_t *_swig_go_result;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  result =  ((arg1)->m_n_proc_lookups_duration_ns);
  *(uint64_t **)&_swig_go_result = new uint64_t(result); 
  return _swig_go_result;
}


void _wrap_sinsp_m_max_n_proc_lookups_set_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0, int32_t *_swig_go_1) {
  sinsp *arg1 = (sinsp *) 0 ;
  int32_t arg2 ;
  int32_t *argp2 ;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  argp2 = (int32_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null int32_t");
  }
  arg2 = (int32_t)*argp2;
  
  
  if (arg1) (arg1)->m_max_n_proc_lookups = arg2;
  
}


int32_t *_wrap_sinsp_m_max_n_proc_lookups_get_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0) {
  sinsp *arg1 = (sinsp *) 0 ;
  int32_t result;
  int32_t *_swig_go_result;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  result =  ((arg1)->m_max_n_proc_lookups);
  *(int32_t **)&_swig_go_result = new int32_t(result); 
  return _swig_go_result;
}


void _wrap_sinsp_m_max_n_proc_socket_lookups_set_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0, int32_t *_swig_go_1) {
  sinsp *arg1 = (sinsp *) 0 ;
  int32_t arg2 ;
  int32_t *argp2 ;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  argp2 = (int32_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null int32_t");
  }
  arg2 = (int32_t)*argp2;
  
  
  if (arg1) (arg1)->m_max_n_proc_socket_lookups = arg2;
  
}


int32_t *_wrap_sinsp_m_max_n_proc_socket_lookups_get_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0) {
  sinsp *arg1 = (sinsp *) 0 ;
  int32_t result;
  int32_t *_swig_go_result;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  result =  ((arg1)->m_max_n_proc_socket_lookups);
  *(int32_t **)&_swig_go_result = new int32_t(result); 
  return _swig_go_result;
}


void _wrap_sinsp_m_snaplen_set_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0, uint32_t *_swig_go_1) {
  sinsp *arg1 = (sinsp *) 0 ;
  uint32_t arg2 ;
  uint32_t *argp2 ;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  argp2 = (uint32_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null uint32_t");
  }
  arg2 = (uint32_t)*argp2;
  
  
  if (arg1) (arg1)->m_snaplen = arg2;
  
}


uint32_t *_wrap_sinsp_m_snaplen_get_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0) {
  sinsp *arg1 = (sinsp *) 0 ;
  uint32_t result;
  uint32_t *_swig_go_result;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  result =  ((arg1)->m_snaplen);
  *(uint32_t **)&_swig_go_result = new uint32_t(result); 
  return _swig_go_result;
}


void _wrap_sinsp_m_max_thread_table_size_set_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0, uint32_t *_swig_go_1) {
  sinsp *arg1 = (sinsp *) 0 ;
  uint32_t arg2 ;
  uint32_t *argp2 ;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  argp2 = (uint32_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null uint32_t");
  }
  arg2 = (uint32_t)*argp2;
  
  
  if (arg1) (arg1)->m_max_thread_table_size = arg2;
  
}


uint32_t *_wrap_sinsp_m_max_thread_table_size_get_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0) {
  sinsp *arg1 = (sinsp *) 0 ;
  uint32_t result;
  uint32_t *_swig_go_result;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  result =  ((arg1)->m_max_thread_table_size);
  *(uint32_t **)&_swig_go_result = new uint32_t(result); 
  return _swig_go_result;
}


void _wrap_sinsp_m_max_fdtable_size_set_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0, uint32_t *_swig_go_1) {
  sinsp *arg1 = (sinsp *) 0 ;
  uint32_t arg2 ;
  uint32_t *argp2 ;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  argp2 = (uint32_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null uint32_t");
  }
  arg2 = (uint32_t)*argp2;
  
  
  if (arg1) (arg1)->m_max_fdtable_size = arg2;
  
}


uint32_t *_wrap_sinsp_m_max_fdtable_size_get_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0) {
  sinsp *arg1 = (sinsp *) 0 ;
  uint32_t result;
  uint32_t *_swig_go_result;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  result =  ((arg1)->m_max_fdtable_size);
  *(uint32_t **)&_swig_go_result = new uint32_t(result); 
  return _swig_go_result;
}


void _wrap_sinsp_m_thread_timeout_ns_set_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0, uint64_t *_swig_go_1) {
  sinsp *arg1 = (sinsp *) 0 ;
  uint64_t arg2 ;
  uint64_t *argp2 ;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  argp2 = (uint64_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null uint64_t");
  }
  arg2 = (uint64_t)*argp2;
  
  
  if (arg1) (arg1)->m_thread_timeout_ns = arg2;
  
}


uint64_t *_wrap_sinsp_m_thread_timeout_ns_get_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0) {
  sinsp *arg1 = (sinsp *) 0 ;
  uint64_t result;
  uint64_t *_swig_go_result;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  result =  ((arg1)->m_thread_timeout_ns);
  *(uint64_t **)&_swig_go_result = new uint64_t(result); 
  return _swig_go_result;
}


void _wrap_sinsp_m_inactive_thread_scan_time_ns_set_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0, uint64_t *_swig_go_1) {
  sinsp *arg1 = (sinsp *) 0 ;
  uint64_t arg2 ;
  uint64_t *argp2 ;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  argp2 = (uint64_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null uint64_t");
  }
  arg2 = (uint64_t)*argp2;
  
  
  if (arg1) (arg1)->m_inactive_thread_scan_time_ns = arg2;
  
}


uint64_t *_wrap_sinsp_m_inactive_thread_scan_time_ns_get_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0) {
  sinsp *arg1 = (sinsp *) 0 ;
  uint64_t result;
  uint64_t *_swig_go_result;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  result =  ((arg1)->m_inactive_thread_scan_time_ns);
  *(uint64_t **)&_swig_go_result = new uint64_t(result); 
  return _swig_go_result;
}


void _wrap_sinsp_m_inactive_container_scan_time_ns_set_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0, uint64_t *_swig_go_1) {
  sinsp *arg1 = (sinsp *) 0 ;
  uint64_t arg2 ;
  uint64_t *argp2 ;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  argp2 = (uint64_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null uint64_t");
  }
  arg2 = (uint64_t)*argp2;
  
  
  if (arg1) (arg1)->m_inactive_container_scan_time_ns = arg2;
  
}


uint64_t *_wrap_sinsp_m_inactive_container_scan_time_ns_get_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0) {
  sinsp *arg1 = (sinsp *) 0 ;
  uint64_t result;
  uint64_t *_swig_go_result;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  result =  ((arg1)->m_inactive_container_scan_time_ns);
  *(uint64_t **)&_swig_go_result = new uint64_t(result); 
  return _swig_go_result;
}


void _wrap_sinsp_m_buffer_format_set_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0, sinsp_evt::param_fmt *_swig_go_1) {
  sinsp *arg1 = (sinsp *) 0 ;
  sinsp_evt::param_fmt arg2 ;
  sinsp_evt::param_fmt *argp2 ;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  argp2 = (sinsp_evt::param_fmt *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null sinsp_evt::param_fmt");
  }
  arg2 = (sinsp_evt::param_fmt)*argp2;
  
  
  if (arg1) (arg1)->m_buffer_format = arg2;
  
}


sinsp_evt::param_fmt *_wrap_sinsp_m_buffer_format_get_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0) {
  sinsp *arg1 = (sinsp *) 0 ;
  sinsp_evt::param_fmt result;
  sinsp_evt::param_fmt *_swig_go_result;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  result =  ((arg1)->m_buffer_format);
  *(sinsp_evt::param_fmt **)&_swig_go_result = new sinsp_evt::param_fmt(result); 
  return _swig_go_result;
}


void _wrap_sinsp_m_import_users_set_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0, bool _swig_go_1) {
  sinsp *arg1 = (sinsp *) 0 ;
  bool arg2 ;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->m_import_users = arg2;
  
}


bool _wrap_sinsp_m_import_users_get_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0) {
  sinsp *arg1 = (sinsp *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  result = (bool) ((arg1)->m_import_users);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_sinsp_m_userlist_set_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0, unordered_map< uint32_t,scap_userinfo * > *_swig_go_1) {
  sinsp *arg1 = (sinsp *) 0 ;
  unordered_map< uint32_t,scap_userinfo * > arg2 ;
  unordered_map< uint32_t,scap_userinfo * > *argp2 ;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  argp2 = (unordered_map< uint32_t,scap_userinfo * > *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null unordered_map< uint32_t,scap_userinfo * >");
  }
  arg2 = (unordered_map< uint32_t,scap_userinfo * >)*argp2;
  
  
  if (arg1) (arg1)->m_userlist = arg2;
  
}


unordered_map< uint32_t,scap_userinfo * > *_wrap_sinsp_m_userlist_get_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0) {
  sinsp *arg1 = (sinsp *) 0 ;
  unordered_map< uint32_t,scap_userinfo * > result;
  unordered_map< uint32_t,scap_userinfo * > *_swig_go_result;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  result =  ((arg1)->m_userlist);
  *(unordered_map< uint32_t,scap_userinfo * > **)&_swig_go_result = new unordered_map< uint32_t,scap_userinfo * >(result); 
  return _swig_go_result;
}


void _wrap_sinsp_m_grouplist_set_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0, unordered_map< uint32_t,scap_groupinfo * > *_swig_go_1) {
  sinsp *arg1 = (sinsp *) 0 ;
  unordered_map< uint32_t,scap_groupinfo * > arg2 ;
  unordered_map< uint32_t,scap_groupinfo * > *argp2 ;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  argp2 = (unordered_map< uint32_t,scap_groupinfo * > *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null unordered_map< uint32_t,scap_groupinfo * >");
  }
  arg2 = (unordered_map< uint32_t,scap_groupinfo * >)*argp2;
  
  
  if (arg1) (arg1)->m_grouplist = arg2;
  
}


unordered_map< uint32_t,scap_groupinfo * > *_wrap_sinsp_m_grouplist_get_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0) {
  sinsp *arg1 = (sinsp *) 0 ;
  unordered_map< uint32_t,scap_groupinfo * > result;
  unordered_map< uint32_t,scap_groupinfo * > *_swig_go_result;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  result =  ((arg1)->m_grouplist);
  *(unordered_map< uint32_t,scap_groupinfo * > **)&_swig_go_result = new unordered_map< uint32_t,scap_groupinfo * >(result); 
  return _swig_go_result;
}


void _wrap_sinsp_m_cycle_writer_set_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0, cycle_writer *_swig_go_1) {
  sinsp *arg1 = (sinsp *) 0 ;
  cycle_writer *arg2 = (cycle_writer *) 0 ;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  arg2 = *(cycle_writer **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_cycle_writer = arg2;
  
}


cycle_writer *_wrap_sinsp_m_cycle_writer_get_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0) {
  sinsp *arg1 = (sinsp *) 0 ;
  cycle_writer *result = 0 ;
  cycle_writer *_swig_go_result;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  result = (cycle_writer *) ((arg1)->m_cycle_writer);
  *(cycle_writer **)&_swig_go_result = (cycle_writer *)result; 
  return _swig_go_result;
}


void _wrap_sinsp_m_write_cycling_set_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0, bool _swig_go_1) {
  sinsp *arg1 = (sinsp *) 0 ;
  bool arg2 ;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->m_write_cycling = arg2;
  
}


bool _wrap_sinsp_m_write_cycling_get_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0) {
  sinsp *arg1 = (sinsp *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  result = (bool) ((arg1)->m_write_cycling);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_sinsp_m_track_tracers_state_set_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0, bool _swig_go_1) {
  sinsp *arg1 = (sinsp *) 0 ;
  bool arg2 ;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->m_track_tracers_state = arg2;
  
}


bool _wrap_sinsp_m_track_tracers_state_get_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0) {
  sinsp *arg1 = (sinsp *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  result = (bool) ((arg1)->m_track_tracers_state);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_sinsp_m_partial_tracers_list_set_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0, list< sinsp_partial_tracer * > *_swig_go_1) {
  sinsp *arg1 = (sinsp *) 0 ;
  list< sinsp_partial_tracer * > *arg2 = (list< sinsp_partial_tracer * > *) 0 ;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  arg2 = *(list< sinsp_partial_tracer * > **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_partial_tracers_list = *arg2;
  
}


list< sinsp_partial_tracer * > *_wrap_sinsp_m_partial_tracers_list_get_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0) {
  sinsp *arg1 = (sinsp *) 0 ;
  list< sinsp_partial_tracer * > *result = 0 ;
  list< sinsp_partial_tracer * > *_swig_go_result;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  result = (list< sinsp_partial_tracer * > *)& ((arg1)->m_partial_tracers_list);
  *(list< sinsp_partial_tracer * > **)&_swig_go_result = (list< sinsp_partial_tracer * > *)result; 
  return _swig_go_result;
}


void _wrap_sinsp_m_partial_tracers_pool_set_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0, simple_lifo_queue< sinsp_partial_tracer > *_swig_go_1) {
  sinsp *arg1 = (sinsp *) 0 ;
  simple_lifo_queue< sinsp_partial_tracer > *arg2 = (simple_lifo_queue< sinsp_partial_tracer > *) 0 ;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  arg2 = *(simple_lifo_queue< sinsp_partial_tracer > **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_partial_tracers_pool = arg2;
  
}


simple_lifo_queue< sinsp_partial_tracer > *_wrap_sinsp_m_partial_tracers_pool_get_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0) {
  sinsp *arg1 = (sinsp *) 0 ;
  simple_lifo_queue< sinsp_partial_tracer > *result = 0 ;
  simple_lifo_queue< sinsp_partial_tracer > *_swig_go_result;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  result = (simple_lifo_queue< sinsp_partial_tracer > *) ((arg1)->m_partial_tracers_pool);
  *(simple_lifo_queue< sinsp_partial_tracer > **)&_swig_go_result = (simple_lifo_queue< sinsp_partial_tracer > *)result; 
  return _swig_go_result;
}


void _wrap_sinsp_m_decoders_reset_list_set_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0, std::vector< sinsp_protodecoder * > *_swig_go_1) {
  sinsp *arg1 = (sinsp *) 0 ;
  std::vector< sinsp_protodecoder * > *arg2 = (std::vector< sinsp_protodecoder * > *) 0 ;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  arg2 = *(std::vector< sinsp_protodecoder * > **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_decoders_reset_list = *arg2;
  
}


std::vector< sinsp_protodecoder * > *_wrap_sinsp_m_decoders_reset_list_get_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0) {
  sinsp *arg1 = (sinsp *) 0 ;
  std::vector< sinsp_protodecoder * > *result = 0 ;
  std::vector< sinsp_protodecoder * > *_swig_go_result;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  result = (std::vector< sinsp_protodecoder * > *)& ((arg1)->m_decoders_reset_list);
  *(std::vector< sinsp_protodecoder * > **)&_swig_go_result = (std::vector< sinsp_protodecoder * > *)result; 
  return _swig_go_result;
}


void _wrap_sinsp_m_meta_evt_set_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0, sinsp_evt *_swig_go_1) {
  sinsp *arg1 = (sinsp *) 0 ;
  sinsp_evt arg2 ;
  sinsp_evt *argp2 ;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  argp2 = (sinsp_evt *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null sinsp_evt");
  }
  arg2 = (sinsp_evt)*argp2;
  
  
  if (arg1) (arg1)->m_meta_evt = arg2;
  
}


sinsp_evt *_wrap_sinsp_m_meta_evt_get_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0) {
  sinsp *arg1 = (sinsp *) 0 ;
  sinsp_evt result;
  sinsp_evt *_swig_go_result;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  result =  ((arg1)->m_meta_evt);
  *(sinsp_evt **)&_swig_go_result = new sinsp_evt(result); 
  return _swig_go_result;
}


void _wrap_sinsp_m_meta_evt_buf_set_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0, _gostring_ _swig_go_1) {
  sinsp *arg1 = (sinsp *) 0 ;
  char *arg2 = (char *) 0 ;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  arg2 = (char *)_swig_go_1.p; 
  
  {
    delete [] arg1->m_meta_evt_buf;
    if (arg2) {
      arg1->m_meta_evt_buf = (char *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->m_meta_evt_buf, (const char *)arg2);
    } else {
      arg1->m_meta_evt_buf = 0;
    }
  }
  
}


_gostring_ _wrap_sinsp_m_meta_evt_buf_get_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0) {
  sinsp *arg1 = (sinsp *) 0 ;
  char *result = 0 ;
  _gostring_ _swig_go_result;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  result = (char *) ((arg1)->m_meta_evt_buf);
  _swig_go_result = Swig_AllocateString((char*)result, result ? strlen((char*)result) : 0); 
  return _swig_go_result;
}


void _wrap_sinsp_m_meta_evt_pending_set_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0, bool _swig_go_1) {
  sinsp *arg1 = (sinsp *) 0 ;
  bool arg2 ;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->m_meta_evt_pending = arg2;
  
}


bool _wrap_sinsp_m_meta_evt_pending_get_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0) {
  sinsp *arg1 = (sinsp *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  result = (bool) ((arg1)->m_meta_evt_pending);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_sinsp_m_meta_skipped_evt_res_set_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0, int32_t *_swig_go_1) {
  sinsp *arg1 = (sinsp *) 0 ;
  int32_t arg2 ;
  int32_t *argp2 ;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  argp2 = (int32_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null int32_t");
  }
  arg2 = (int32_t)*argp2;
  
  
  if (arg1) (arg1)->m_meta_skipped_evt_res = arg2;
  
}


int32_t *_wrap_sinsp_m_meta_skipped_evt_res_get_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0) {
  sinsp *arg1 = (sinsp *) 0 ;
  int32_t result;
  int32_t *_swig_go_result;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  result =  ((arg1)->m_meta_skipped_evt_res);
  *(int32_t **)&_swig_go_result = new int32_t(result); 
  return _swig_go_result;
}


void _wrap_sinsp_m_meta_skipped_evt_set_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0, sinsp_evt *_swig_go_1) {
  sinsp *arg1 = (sinsp *) 0 ;
  sinsp_evt *arg2 = (sinsp_evt *) 0 ;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  arg2 = *(sinsp_evt **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_meta_skipped_evt = arg2;
  
}


sinsp_evt *_wrap_sinsp_m_meta_skipped_evt_get_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0) {
  sinsp *arg1 = (sinsp *) 0 ;
  sinsp_evt *result = 0 ;
  sinsp_evt *_swig_go_result;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  result = (sinsp_evt *) ((arg1)->m_meta_skipped_evt);
  *(sinsp_evt **)&_swig_go_result = (sinsp_evt *)result; 
  return _swig_go_result;
}


void _wrap_sinsp_m_metaevt_set_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0, sinsp_evt *_swig_go_1) {
  sinsp *arg1 = (sinsp *) 0 ;
  sinsp_evt *arg2 = (sinsp_evt *) 0 ;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  arg2 = *(sinsp_evt **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_metaevt = arg2;
  
}


sinsp_evt *_wrap_sinsp_m_metaevt_get_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0) {
  sinsp *arg1 = (sinsp *) 0 ;
  sinsp_evt *result = 0 ;
  sinsp_evt *_swig_go_result;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  result = (sinsp_evt *) ((arg1)->m_metaevt);
  *(sinsp_evt **)&_swig_go_result = (sinsp_evt *)result; 
  return _swig_go_result;
}


void _wrap_sinsp_m_meta_event_callback_set_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0, void** _swig_go_1) {
  sinsp *arg1 = (sinsp *) 0 ;
  meta_event_callback arg2 = (meta_event_callback) 0 ;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  arg2 = *(meta_event_callback *)&_swig_go_1; 
  
  if (arg1) (arg1)->m_meta_event_callback = arg2;
  
}


void** _wrap_sinsp_m_meta_event_callback_get_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0) {
  sinsp *arg1 = (sinsp *) 0 ;
  meta_event_callback result;
  void** _swig_go_result;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  result = (meta_event_callback) ((arg1)->m_meta_event_callback);
  *(meta_event_callback *)&_swig_go_result = (meta_event_callback)result; 
  return _swig_go_result;
}


void _wrap_sinsp_m_meta_event_callback_data_set_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0, void *_swig_go_1) {
  sinsp *arg1 = (sinsp *) 0 ;
  void *arg2 = (void *) 0 ;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  arg2 = *(void **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_meta_event_callback_data = arg2;
  
}


void *_wrap_sinsp_m_meta_event_callback_data_get_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0) {
  sinsp *arg1 = (sinsp *) 0 ;
  void *result = 0 ;
  void *_swig_go_result;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  result = (void *) ((arg1)->m_meta_event_callback_data);
  *(void **)&_swig_go_result = (void *)result; 
  return _swig_go_result;
}


void _wrap_sinsp_m_get_procs_cpu_from_driver_set_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0, bool _swig_go_1) {
  sinsp *arg1 = (sinsp *) 0 ;
  bool arg2 ;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  arg2 = (bool)_swig_go_1; 
  
  if (arg1) (arg1)->m_get_procs_cpu_from_driver = arg2;
  
}


bool _wrap_sinsp_m_get_procs_cpu_from_driver_get_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0) {
  sinsp *arg1 = (sinsp *) 0 ;
  bool result;
  bool _swig_go_result;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  result = (bool) ((arg1)->m_get_procs_cpu_from_driver);
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_sinsp_m_next_flush_time_ns_set_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0, uint64_t *_swig_go_1) {
  sinsp *arg1 = (sinsp *) 0 ;
  uint64_t arg2 ;
  uint64_t *argp2 ;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  argp2 = (uint64_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null uint64_t");
  }
  arg2 = (uint64_t)*argp2;
  
  
  if (arg1) (arg1)->m_next_flush_time_ns = arg2;
  
}


uint64_t *_wrap_sinsp_m_next_flush_time_ns_get_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0) {
  sinsp *arg1 = (sinsp *) 0 ;
  uint64_t result;
  uint64_t *_swig_go_result;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  result =  ((arg1)->m_next_flush_time_ns);
  *(uint64_t **)&_swig_go_result = new uint64_t(result); 
  return _swig_go_result;
}


void _wrap_sinsp_m_last_procrequest_tod_set_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0, uint64_t *_swig_go_1) {
  sinsp *arg1 = (sinsp *) 0 ;
  uint64_t arg2 ;
  uint64_t *argp2 ;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  argp2 = (uint64_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null uint64_t");
  }
  arg2 = (uint64_t)*argp2;
  
  
  if (arg1) (arg1)->m_last_procrequest_tod = arg2;
  
}


uint64_t *_wrap_sinsp_m_last_procrequest_tod_get_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0) {
  sinsp *arg1 = (sinsp *) 0 ;
  uint64_t result;
  uint64_t *_swig_go_result;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  result =  ((arg1)->m_last_procrequest_tod);
  *(uint64_t **)&_swig_go_result = new uint64_t(result); 
  return _swig_go_result;
}


void _wrap_sinsp_m_meinfo_set_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0, sinsp_proc_metainfo *_swig_go_1) {
  sinsp *arg1 = (sinsp *) 0 ;
  sinsp_proc_metainfo *arg2 = (sinsp_proc_metainfo *) 0 ;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  arg2 = *(sinsp_proc_metainfo **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_meinfo = *arg2;
  
}


sinsp_proc_metainfo *_wrap_sinsp_m_meinfo_get_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0) {
  sinsp *arg1 = (sinsp *) 0 ;
  sinsp_proc_metainfo *result = 0 ;
  sinsp_proc_metainfo *_swig_go_result;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  result = (sinsp_proc_metainfo *)& ((arg1)->m_meinfo);
  *(sinsp_proc_metainfo **)&_swig_go_result = (sinsp_proc_metainfo *)result; 
  return _swig_go_result;
}


void _wrap_sinsp_m_next_stats_print_time_ns_set_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0, uint64_t *_swig_go_1) {
  sinsp *arg1 = (sinsp *) 0 ;
  uint64_t arg2 ;
  uint64_t *argp2 ;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  argp2 = (uint64_t *)_swig_go_1;
  if (argp2 == NULL) {
    _swig_gopanic("Attempt to dereference null uint64_t");
  }
  arg2 = (uint64_t)*argp2;
  
  
  if (arg1) (arg1)->m_next_stats_print_time_ns = arg2;
  
}


uint64_t *_wrap_sinsp_m_next_stats_print_time_ns_get_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0) {
  sinsp *arg1 = (sinsp *) 0 ;
  uint64_t result;
  uint64_t *_swig_go_result;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  result =  ((arg1)->m_next_stats_print_time_ns);
  *(uint64_t **)&_swig_go_result = new uint64_t(result); 
  return _swig_go_result;
}


void _wrap_sinsp_m_num_possible_cpus_set_sysdigswiglib_f325d3b2c40a36ce(intgo _swig_go_0) {
  unsigned int arg1 ;
  
  arg1 = (unsigned int)_swig_go_0; 
  
  sinsp::m_num_possible_cpus = arg1;
  
}


intgo _wrap_sinsp_m_num_possible_cpus_get_sysdigswiglib_f325d3b2c40a36ce() {
  unsigned int result;
  intgo _swig_go_result;
  
  
  result = (unsigned int)sinsp::m_num_possible_cpus;
  _swig_go_result = result; 
  return _swig_go_result;
}


void _wrap_sinsp_m_suppressed_comms_set_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0, std::set< std::string > *_swig_go_1) {
  sinsp *arg1 = (sinsp *) 0 ;
  std::set< std::string > *arg2 = (std::set< std::string > *) 0 ;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  arg2 = *(std::set< std::string > **)&_swig_go_1; 
  
  if (arg1) (arg1)->m_suppressed_comms = *arg2;
  
}


std::set< std::string > *_wrap_sinsp_m_suppressed_comms_get_sysdigswiglib_f325d3b2c40a36ce(sinsp *_swig_go_0) {
  sinsp *arg1 = (sinsp *) 0 ;
  std::set< std::string > *result = 0 ;
  std::set< std::string > *_swig_go_result;
  
  arg1 = *(sinsp **)&_swig_go_0; 
  
  result = (std::set< std::string > *)& ((arg1)->m_suppressed_comms);
  *(std::set< std::string > **)&_swig_go_result = (std::set< std::string > *)result; 
  return _swig_go_result;
}


#ifdef __cplusplus
}
#endif

